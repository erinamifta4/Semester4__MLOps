2024-04-27 12:25:29,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-27 12:25:29,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-27 12:25:29,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-27 12:25:29,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-27 12:28:13,481:INFO:PyCaret RegressionExperiment
2024-04-27 12:28:13,482:INFO:Logging name: reg-default-name
2024-04-27 12:28:13,483:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-27 12:28:13,485:INFO:version 3.3.1
2024-04-27 12:28:13,485:INFO:Initializing setup()
2024-04-27 12:28:13,485:INFO:self.USI: 6970
2024-04-27 12:28:13,485:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'memory', 'html_param', 'X', 'logging_param', 'exp_id', 'X_test', 'fold_groups_param', 'y', 'gpu_n_jobs_param', 'gpu_param', 'target_param', 'X_train', '_ml_usecase', 'fold_generator', 'transform_target_param', 'data', 'seed', 'idx', 'exp_name_log', 'pipeline', 'y_train', 'USI', 'y_test'}
2024-04-27 12:28:13,485:INFO:Checking environment
2024-04-27 12:28:13,486:INFO:python_version: 3.11.5
2024-04-27 12:28:13,486:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-04-27 12:28:13,486:INFO:machine: AMD64
2024-04-27 12:28:13,486:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-27 12:28:13,492:INFO:Memory: svmem(total=7952347136, available=1896083456, percent=76.2, used=6056263680, free=1896083456)
2024-04-27 12:28:13,492:INFO:Physical Core: 6
2024-04-27 12:28:13,492:INFO:Logical Core: 12
2024-04-27 12:28:13,493:INFO:Checking libraries
2024-04-27 12:28:13,493:INFO:System:
2024-04-27 12:28:13,493:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-04-27 12:28:13,493:INFO:executable: c:\Users\USER\AppData\Local\Programs\Python\Python311\python.exe
2024-04-27 12:28:13,493:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-27 12:28:13,493:INFO:PyCaret required dependencies:
2024-04-27 12:28:14,688:INFO:                 pip: 24.0
2024-04-27 12:28:14,688:INFO:          setuptools: 69.5.1
2024-04-27 12:28:14,688:INFO:             pycaret: 3.3.1
2024-04-27 12:28:14,688:INFO:             IPython: 8.22.2
2024-04-27 12:28:14,688:INFO:          ipywidgets: 8.1.2
2024-04-27 12:28:14,688:INFO:                tqdm: 4.66.2
2024-04-27 12:28:14,689:INFO:               numpy: 1.25.2
2024-04-27 12:28:14,689:INFO:              pandas: 2.1.4
2024-04-27 12:28:14,689:INFO:              jinja2: 3.1.3
2024-04-27 12:28:14,689:INFO:               scipy: 1.11.4
2024-04-27 12:28:14,689:INFO:              joblib: 1.3.2
2024-04-27 12:28:14,689:INFO:             sklearn: 1.4.2
2024-04-27 12:28:14,689:INFO:                pyod: 1.1.3
2024-04-27 12:28:14,690:INFO:            imblearn: 0.12.0
2024-04-27 12:28:14,690:INFO:   category_encoders: 2.6.3
2024-04-27 12:28:14,690:INFO:            lightgbm: 4.3.0
2024-04-27 12:28:14,690:INFO:               numba: 0.58.1
2024-04-27 12:28:14,690:INFO:            requests: 2.31.0
2024-04-27 12:28:14,690:INFO:          matplotlib: 3.7.5
2024-04-27 12:28:14,690:INFO:          scikitplot: 0.3.7
2024-04-27 12:28:14,690:INFO:         yellowbrick: 1.5
2024-04-27 12:28:14,690:INFO:              plotly: 5.19.0
2024-04-27 12:28:14,690:INFO:    plotly-resampler: Not installed
2024-04-27 12:28:14,690:INFO:             kaleido: 0.2.1
2024-04-27 12:28:14,690:INFO:           schemdraw: 0.15
2024-04-27 12:28:14,690:INFO:         statsmodels: 0.14.1
2024-04-27 12:28:14,690:INFO:              sktime: 0.26.0
2024-04-27 12:28:14,690:INFO:               tbats: 1.1.3
2024-04-27 12:28:14,690:INFO:            pmdarima: 2.0.4
2024-04-27 12:28:14,690:INFO:              psutil: 5.9.8
2024-04-27 12:28:14,690:INFO:          markupsafe: 2.1.5
2024-04-27 12:28:14,690:INFO:             pickle5: Not installed
2024-04-27 12:28:14,690:INFO:         cloudpickle: 3.0.0
2024-04-27 12:28:14,690:INFO:         deprecation: 2.1.0
2024-04-27 12:28:14,690:INFO:              xxhash: 3.4.1
2024-04-27 12:28:14,690:INFO:           wurlitzer: Not installed
2024-04-27 12:28:14,690:INFO:PyCaret optional dependencies:
2024-04-27 12:28:20,453:INFO:                shap: 0.45.0
2024-04-27 12:28:20,453:INFO:           interpret: 0.5.1
2024-04-27 12:28:20,453:INFO:                umap: 0.5.5
2024-04-27 12:28:20,453:INFO:     ydata_profiling: 4.6.5
2024-04-27 12:28:20,454:INFO:  explainerdashboard: 0.4.6
2024-04-27 12:28:20,454:INFO:             autoviz: Not installed
2024-04-27 12:28:20,454:INFO:           fairlearn: 0.7.0
2024-04-27 12:28:20,454:INFO:          deepchecks: Not installed
2024-04-27 12:28:20,454:INFO:             xgboost: Not installed
2024-04-27 12:28:20,454:INFO:            catboost: 1.2.3
2024-04-27 12:28:20,454:INFO:              kmodes: 0.12.2
2024-04-27 12:28:20,454:INFO:             mlxtend: 0.23.1
2024-04-27 12:28:20,454:INFO:       statsforecast: 1.5.0
2024-04-27 12:28:20,454:INFO:        tune_sklearn: Not installed
2024-04-27 12:28:20,454:INFO:                 ray: Not installed
2024-04-27 12:28:20,454:INFO:            hyperopt: 0.2.7
2024-04-27 12:28:20,454:INFO:              optuna: 3.5.0
2024-04-27 12:28:20,454:INFO:               skopt: 0.10.0
2024-04-27 12:28:20,456:INFO:              mlflow: 2.11.3
2024-04-27 12:28:20,456:INFO:              gradio: 4.21.0
2024-04-27 12:28:20,456:INFO:             fastapi: 0.110.0
2024-04-27 12:28:20,456:INFO:             uvicorn: 0.28.0
2024-04-27 12:28:20,456:INFO:              m2cgen: 0.10.0
2024-04-27 12:28:20,456:INFO:           evidently: 0.4.16
2024-04-27 12:28:20,456:INFO:               fugue: 0.8.6
2024-04-27 12:28:20,456:INFO:           streamlit: 1.33.0
2024-04-27 12:28:20,456:INFO:             prophet: Not installed
2024-04-27 12:28:20,456:INFO:None
2024-04-27 12:28:20,456:INFO:Set up data.
2024-04-27 12:28:45,608:INFO:PyCaret RegressionExperiment
2024-04-27 12:28:45,610:INFO:Logging name: reg-default-name
2024-04-27 12:28:45,610:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-27 12:28:45,610:INFO:version 3.3.1
2024-04-27 12:28:45,610:INFO:Initializing setup()
2024-04-27 12:28:45,610:INFO:self.USI: 7f58
2024-04-27 12:28:45,610:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'memory', 'html_param', 'X', 'logging_param', 'exp_id', 'X_test', 'fold_groups_param', 'y', 'gpu_n_jobs_param', 'gpu_param', 'target_param', 'X_train', '_ml_usecase', 'fold_generator', 'transform_target_param', 'data', 'seed', 'idx', 'exp_name_log', 'pipeline', 'y_train', 'USI', 'y_test'}
2024-04-27 12:28:45,610:INFO:Checking environment
2024-04-27 12:28:45,610:INFO:python_version: 3.11.5
2024-04-27 12:28:45,611:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-04-27 12:28:45,611:INFO:machine: AMD64
2024-04-27 12:28:45,611:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-27 12:28:45,618:INFO:Memory: svmem(total=7952347136, available=1759744000, percent=77.9, used=6192603136, free=1759744000)
2024-04-27 12:28:45,618:INFO:Physical Core: 6
2024-04-27 12:28:45,618:INFO:Logical Core: 12
2024-04-27 12:28:45,618:INFO:Checking libraries
2024-04-27 12:28:45,618:INFO:System:
2024-04-27 12:28:45,618:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-04-27 12:28:45,618:INFO:executable: c:\Users\USER\AppData\Local\Programs\Python\Python311\python.exe
2024-04-27 12:28:45,619:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-27 12:28:45,619:INFO:PyCaret required dependencies:
2024-04-27 12:28:45,619:INFO:                 pip: 24.0
2024-04-27 12:28:45,619:INFO:          setuptools: 69.5.1
2024-04-27 12:28:45,619:INFO:             pycaret: 3.3.1
2024-04-27 12:28:45,619:INFO:             IPython: 8.22.2
2024-04-27 12:28:45,619:INFO:          ipywidgets: 8.1.2
2024-04-27 12:28:45,620:INFO:                tqdm: 4.66.2
2024-04-27 12:28:45,620:INFO:               numpy: 1.25.2
2024-04-27 12:28:45,620:INFO:              pandas: 2.1.4
2024-04-27 12:28:45,620:INFO:              jinja2: 3.1.3
2024-04-27 12:28:45,620:INFO:               scipy: 1.11.4
2024-04-27 12:28:45,620:INFO:              joblib: 1.3.2
2024-04-27 12:28:45,620:INFO:             sklearn: 1.4.2
2024-04-27 12:28:45,620:INFO:                pyod: 1.1.3
2024-04-27 12:28:45,620:INFO:            imblearn: 0.12.0
2024-04-27 12:28:45,622:INFO:   category_encoders: 2.6.3
2024-04-27 12:28:45,622:INFO:            lightgbm: 4.3.0
2024-04-27 12:28:45,622:INFO:               numba: 0.58.1
2024-04-27 12:28:45,622:INFO:            requests: 2.31.0
2024-04-27 12:28:45,622:INFO:          matplotlib: 3.7.5
2024-04-27 12:28:45,622:INFO:          scikitplot: 0.3.7
2024-04-27 12:28:45,622:INFO:         yellowbrick: 1.5
2024-04-27 12:28:45,622:INFO:              plotly: 5.19.0
2024-04-27 12:28:45,623:INFO:    plotly-resampler: Not installed
2024-04-27 12:28:45,623:INFO:             kaleido: 0.2.1
2024-04-27 12:28:45,623:INFO:           schemdraw: 0.15
2024-04-27 12:28:45,623:INFO:         statsmodels: 0.14.1
2024-04-27 12:28:45,623:INFO:              sktime: 0.26.0
2024-04-27 12:28:45,623:INFO:               tbats: 1.1.3
2024-04-27 12:28:45,623:INFO:            pmdarima: 2.0.4
2024-04-27 12:28:45,623:INFO:              psutil: 5.9.8
2024-04-27 12:28:45,623:INFO:          markupsafe: 2.1.5
2024-04-27 12:28:45,623:INFO:             pickle5: Not installed
2024-04-27 12:28:45,624:INFO:         cloudpickle: 3.0.0
2024-04-27 12:28:45,624:INFO:         deprecation: 2.1.0
2024-04-27 12:28:45,624:INFO:              xxhash: 3.4.1
2024-04-27 12:28:45,624:INFO:           wurlitzer: Not installed
2024-04-27 12:28:45,624:INFO:PyCaret optional dependencies:
2024-04-27 12:28:45,624:INFO:                shap: 0.45.0
2024-04-27 12:28:45,624:INFO:           interpret: 0.5.1
2024-04-27 12:28:45,624:INFO:                umap: 0.5.5
2024-04-27 12:28:45,624:INFO:     ydata_profiling: 4.6.5
2024-04-27 12:28:45,625:INFO:  explainerdashboard: 0.4.6
2024-04-27 12:28:45,625:INFO:             autoviz: Not installed
2024-04-27 12:28:45,625:INFO:           fairlearn: 0.7.0
2024-04-27 12:28:45,625:INFO:          deepchecks: Not installed
2024-04-27 12:28:45,625:INFO:             xgboost: Not installed
2024-04-27 12:28:45,625:INFO:            catboost: 1.2.3
2024-04-27 12:28:45,625:INFO:              kmodes: 0.12.2
2024-04-27 12:28:45,625:INFO:             mlxtend: 0.23.1
2024-04-27 12:28:45,625:INFO:       statsforecast: 1.5.0
2024-04-27 12:28:45,626:INFO:        tune_sklearn: Not installed
2024-04-27 12:28:45,626:INFO:                 ray: Not installed
2024-04-27 12:28:45,626:INFO:            hyperopt: 0.2.7
2024-04-27 12:28:45,626:INFO:              optuna: 3.5.0
2024-04-27 12:28:45,626:INFO:               skopt: 0.10.0
2024-04-27 12:28:45,626:INFO:              mlflow: 2.11.3
2024-04-27 12:28:45,626:INFO:              gradio: 4.21.0
2024-04-27 12:28:45,626:INFO:             fastapi: 0.110.0
2024-04-27 12:28:45,626:INFO:             uvicorn: 0.28.0
2024-04-27 12:28:45,626:INFO:              m2cgen: 0.10.0
2024-04-27 12:28:45,626:INFO:           evidently: 0.4.16
2024-04-27 12:28:45,626:INFO:               fugue: 0.8.6
2024-04-27 12:28:45,626:INFO:           streamlit: 1.33.0
2024-04-27 12:28:45,626:INFO:             prophet: Not installed
2024-04-27 12:28:45,626:INFO:None
2024-04-27 12:28:45,627:INFO:Set up data.
2024-04-27 12:28:45,644:INFO:Set up folding strategy.
2024-04-27 12:28:45,644:INFO:Set up train/test split.
2024-04-27 12:28:45,663:INFO:Set up index.
2024-04-27 12:28:45,663:INFO:Assigning column types.
2024-04-27 12:28:45,670:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-27 12:28:45,670:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-27 12:28:45,679:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-27 12:28:45,692:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-27 12:28:45,800:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-27 12:28:45,876:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-27 12:28:45,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:28:45,878:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:28:45,927:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-27 12:28:45,936:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-27 12:28:45,944:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-27 12:28:46,054:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-27 12:28:46,155:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-27 12:28:46,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:28:46,157:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:28:46,158:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-04-27 12:28:46,171:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-27 12:28:46,182:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-27 12:28:46,316:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-27 12:28:46,407:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-27 12:28:46,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:28:46,409:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:28:46,420:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-27 12:28:46,440:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-27 12:28:46,573:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-27 12:28:46,655:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-27 12:28:46,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:28:46,657:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:28:46,658:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-04-27 12:28:46,675:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-27 12:28:46,791:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-27 12:28:46,901:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-27 12:28:46,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:28:46,902:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:28:46,919:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-27 12:28:47,024:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-27 12:28:47,110:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-27 12:28:47,111:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:28:47,111:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:28:47,112:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-04-27 12:28:47,249:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-27 12:28:47,333:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-27 12:28:47,334:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:28:47,334:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:28:47,472:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-27 12:28:47,559:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-27 12:28:47,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:28:47,561:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:28:47,562:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-27 12:28:47,688:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-27 12:28:47,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:28:47,768:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:28:47,885:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-27 12:28:47,967:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:28:47,967:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:28:47,970:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-04-27 12:28:48,171:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:28:48,172:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:28:48,373:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:28:48,373:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:28:48,376:INFO:Preparing preprocessing pipeline...
2024-04-27 12:28:48,376:INFO:Set up simple imputation.
2024-04-27 12:28:48,417:INFO:Finished creating preprocessing pipeline.
2024-04-27 12:28:48,427:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\USER\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-04-27 12:28:48,427:INFO:Creating final display dataframe.
2024-04-27 12:28:48,555:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target       DEATH_EVENT
2                   Target type        Regression
3           Original data shape         (299, 13)
4        Transformed data shape         (299, 13)
5   Transformed train set shape         (209, 13)
6    Transformed test set shape          (90, 13)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              7f58
2024-04-27 12:28:48,783:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:28:48,784:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:28:48,975:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:28:48,975:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:28:48,976:INFO:setup() successfully completed in 3.37s...............
2024-04-27 12:28:48,977:INFO:Initializing compare_models()
2024-04-27 12:28:48,977:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-04-27 12:28:48,977:INFO:Checking exceptions
2024-04-27 12:28:48,979:INFO:Preparing display monitor
2024-04-27 12:28:49,022:INFO:Initializing Linear Regression
2024-04-27 12:28:49,022:INFO:Total runtime is 0.0 minutes
2024-04-27 12:28:49,028:INFO:SubProcess create_model() called ==================================
2024-04-27 12:28:49,029:INFO:Initializing create_model()
2024-04-27 12:28:49,029:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:28:49,029:INFO:Checking exceptions
2024-04-27 12:28:49,030:INFO:Importing libraries
2024-04-27 12:28:49,030:INFO:Copying training dataset
2024-04-27 12:28:49,039:INFO:Defining folds
2024-04-27 12:28:49,040:INFO:Declaring metric variables
2024-04-27 12:28:49,045:INFO:Importing untrained model
2024-04-27 12:28:49,052:INFO:Linear Regression Imported successfully
2024-04-27 12:28:49,065:INFO:Starting cross validation
2024-04-27 12:28:49,079:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:28:59,063:INFO:Calculating mean and std
2024-04-27 12:28:59,068:INFO:Creating metrics dataframe
2024-04-27 12:28:59,078:INFO:Uploading results into container
2024-04-27 12:28:59,085:INFO:Uploading model into container now
2024-04-27 12:28:59,086:INFO:_master_model_container: 1
2024-04-27 12:28:59,086:INFO:_display_container: 2
2024-04-27 12:28:59,086:INFO:LinearRegression(n_jobs=-1)
2024-04-27 12:28:59,087:INFO:create_model() successfully completed......................................
2024-04-27 12:28:59,513:INFO:SubProcess create_model() end ==================================
2024-04-27 12:28:59,513:INFO:Creating metrics dataframe
2024-04-27 12:28:59,526:INFO:Initializing Lasso Regression
2024-04-27 12:28:59,526:INFO:Total runtime is 0.17505683501561484 minutes
2024-04-27 12:28:59,533:INFO:SubProcess create_model() called ==================================
2024-04-27 12:28:59,534:INFO:Initializing create_model()
2024-04-27 12:28:59,534:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:28:59,534:INFO:Checking exceptions
2024-04-27 12:28:59,534:INFO:Importing libraries
2024-04-27 12:28:59,534:INFO:Copying training dataset
2024-04-27 12:28:59,542:INFO:Defining folds
2024-04-27 12:28:59,543:INFO:Declaring metric variables
2024-04-27 12:28:59,549:INFO:Importing untrained model
2024-04-27 12:28:59,555:INFO:Lasso Regression Imported successfully
2024-04-27 12:28:59,568:INFO:Starting cross validation
2024-04-27 12:28:59,570:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:06,327:INFO:Calculating mean and std
2024-04-27 12:29:06,329:INFO:Creating metrics dataframe
2024-04-27 12:29:06,333:INFO:Uploading results into container
2024-04-27 12:29:06,334:INFO:Uploading model into container now
2024-04-27 12:29:06,335:INFO:_master_model_container: 2
2024-04-27 12:29:06,335:INFO:_display_container: 2
2024-04-27 12:29:06,336:INFO:Lasso(random_state=123)
2024-04-27 12:29:06,336:INFO:create_model() successfully completed......................................
2024-04-27 12:29:06,579:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:06,579:INFO:Creating metrics dataframe
2024-04-27 12:29:06,596:INFO:Initializing Ridge Regression
2024-04-27 12:29:06,596:INFO:Total runtime is 0.29288992484410603 minutes
2024-04-27 12:29:06,601:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:06,601:INFO:Initializing create_model()
2024-04-27 12:29:06,602:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:06,602:INFO:Checking exceptions
2024-04-27 12:29:06,602:INFO:Importing libraries
2024-04-27 12:29:06,602:INFO:Copying training dataset
2024-04-27 12:29:06,610:INFO:Defining folds
2024-04-27 12:29:06,610:INFO:Declaring metric variables
2024-04-27 12:29:06,615:INFO:Importing untrained model
2024-04-27 12:29:06,622:INFO:Ridge Regression Imported successfully
2024-04-27 12:29:06,634:INFO:Starting cross validation
2024-04-27 12:29:06,635:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:06,779:INFO:Calculating mean and std
2024-04-27 12:29:06,782:INFO:Creating metrics dataframe
2024-04-27 12:29:06,785:INFO:Uploading results into container
2024-04-27 12:29:06,785:INFO:Uploading model into container now
2024-04-27 12:29:06,786:INFO:_master_model_container: 3
2024-04-27 12:29:06,786:INFO:_display_container: 2
2024-04-27 12:29:06,788:INFO:Ridge(random_state=123)
2024-04-27 12:29:06,788:INFO:create_model() successfully completed......................................
2024-04-27 12:29:07,029:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:07,029:INFO:Creating metrics dataframe
2024-04-27 12:29:07,040:INFO:Initializing Elastic Net
2024-04-27 12:29:07,040:INFO:Total runtime is 0.3002895752588908 minutes
2024-04-27 12:29:07,045:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:07,046:INFO:Initializing create_model()
2024-04-27 12:29:07,046:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:07,046:INFO:Checking exceptions
2024-04-27 12:29:07,046:INFO:Importing libraries
2024-04-27 12:29:07,046:INFO:Copying training dataset
2024-04-27 12:29:07,058:INFO:Defining folds
2024-04-27 12:29:07,058:INFO:Declaring metric variables
2024-04-27 12:29:07,065:INFO:Importing untrained model
2024-04-27 12:29:07,071:INFO:Elastic Net Imported successfully
2024-04-27 12:29:07,083:INFO:Starting cross validation
2024-04-27 12:29:07,084:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:07,205:INFO:Calculating mean and std
2024-04-27 12:29:07,207:INFO:Creating metrics dataframe
2024-04-27 12:29:07,210:INFO:Uploading results into container
2024-04-27 12:29:07,211:INFO:Uploading model into container now
2024-04-27 12:29:07,211:INFO:_master_model_container: 4
2024-04-27 12:29:07,212:INFO:_display_container: 2
2024-04-27 12:29:07,212:INFO:ElasticNet(random_state=123)
2024-04-27 12:29:07,212:INFO:create_model() successfully completed......................................
2024-04-27 12:29:07,424:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:07,425:INFO:Creating metrics dataframe
2024-04-27 12:29:07,436:INFO:Initializing Least Angle Regression
2024-04-27 12:29:07,436:INFO:Total runtime is 0.30690165360768634 minutes
2024-04-27 12:29:07,441:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:07,442:INFO:Initializing create_model()
2024-04-27 12:29:07,442:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:07,442:INFO:Checking exceptions
2024-04-27 12:29:07,443:INFO:Importing libraries
2024-04-27 12:29:07,443:INFO:Copying training dataset
2024-04-27 12:29:07,451:INFO:Defining folds
2024-04-27 12:29:07,451:INFO:Declaring metric variables
2024-04-27 12:29:07,457:INFO:Importing untrained model
2024-04-27 12:29:07,462:INFO:Least Angle Regression Imported successfully
2024-04-27 12:29:07,474:INFO:Starting cross validation
2024-04-27 12:29:07,476:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:07,604:INFO:Calculating mean and std
2024-04-27 12:29:07,605:INFO:Creating metrics dataframe
2024-04-27 12:29:07,608:INFO:Uploading results into container
2024-04-27 12:29:07,609:INFO:Uploading model into container now
2024-04-27 12:29:07,609:INFO:_master_model_container: 5
2024-04-27 12:29:07,609:INFO:_display_container: 2
2024-04-27 12:29:07,611:INFO:Lars(random_state=123)
2024-04-27 12:29:07,611:INFO:create_model() successfully completed......................................
2024-04-27 12:29:07,804:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:07,805:INFO:Creating metrics dataframe
2024-04-27 12:29:07,817:INFO:Initializing Lasso Least Angle Regression
2024-04-27 12:29:07,817:INFO:Total runtime is 0.31324543555577594 minutes
2024-04-27 12:29:07,824:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:07,825:INFO:Initializing create_model()
2024-04-27 12:29:07,825:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:07,825:INFO:Checking exceptions
2024-04-27 12:29:07,826:INFO:Importing libraries
2024-04-27 12:29:07,826:INFO:Copying training dataset
2024-04-27 12:29:07,837:INFO:Defining folds
2024-04-27 12:29:07,837:INFO:Declaring metric variables
2024-04-27 12:29:07,843:INFO:Importing untrained model
2024-04-27 12:29:07,854:INFO:Lasso Least Angle Regression Imported successfully
2024-04-27 12:29:07,874:INFO:Starting cross validation
2024-04-27 12:29:07,875:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:08,022:INFO:Calculating mean and std
2024-04-27 12:29:08,024:INFO:Creating metrics dataframe
2024-04-27 12:29:08,027:INFO:Uploading results into container
2024-04-27 12:29:08,027:INFO:Uploading model into container now
2024-04-27 12:29:08,028:INFO:_master_model_container: 6
2024-04-27 12:29:08,028:INFO:_display_container: 2
2024-04-27 12:29:08,029:INFO:LassoLars(random_state=123)
2024-04-27 12:29:08,029:INFO:create_model() successfully completed......................................
2024-04-27 12:29:08,233:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:08,233:INFO:Creating metrics dataframe
2024-04-27 12:29:08,244:INFO:Initializing Orthogonal Matching Pursuit
2024-04-27 12:29:08,244:INFO:Total runtime is 0.32037125825881957 minutes
2024-04-27 12:29:08,249:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:08,249:INFO:Initializing create_model()
2024-04-27 12:29:08,251:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:08,251:INFO:Checking exceptions
2024-04-27 12:29:08,251:INFO:Importing libraries
2024-04-27 12:29:08,251:INFO:Copying training dataset
2024-04-27 12:29:08,258:INFO:Defining folds
2024-04-27 12:29:08,258:INFO:Declaring metric variables
2024-04-27 12:29:08,265:INFO:Importing untrained model
2024-04-27 12:29:08,270:INFO:Orthogonal Matching Pursuit Imported successfully
2024-04-27 12:29:08,279:INFO:Starting cross validation
2024-04-27 12:29:08,281:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:08,399:INFO:Calculating mean and std
2024-04-27 12:29:08,401:INFO:Creating metrics dataframe
2024-04-27 12:29:08,404:INFO:Uploading results into container
2024-04-27 12:29:08,406:INFO:Uploading model into container now
2024-04-27 12:29:08,407:INFO:_master_model_container: 7
2024-04-27 12:29:08,407:INFO:_display_container: 2
2024-04-27 12:29:08,407:INFO:OrthogonalMatchingPursuit()
2024-04-27 12:29:08,407:INFO:create_model() successfully completed......................................
2024-04-27 12:29:08,605:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:08,606:INFO:Creating metrics dataframe
2024-04-27 12:29:08,617:INFO:Initializing Bayesian Ridge
2024-04-27 12:29:08,618:INFO:Total runtime is 0.3265807708104451 minutes
2024-04-27 12:29:08,623:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:08,623:INFO:Initializing create_model()
2024-04-27 12:29:08,624:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:08,624:INFO:Checking exceptions
2024-04-27 12:29:08,624:INFO:Importing libraries
2024-04-27 12:29:08,624:INFO:Copying training dataset
2024-04-27 12:29:08,637:INFO:Defining folds
2024-04-27 12:29:08,637:INFO:Declaring metric variables
2024-04-27 12:29:08,644:INFO:Importing untrained model
2024-04-27 12:29:08,655:INFO:Bayesian Ridge Imported successfully
2024-04-27 12:29:08,674:INFO:Starting cross validation
2024-04-27 12:29:08,676:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:08,825:INFO:Calculating mean and std
2024-04-27 12:29:08,827:INFO:Creating metrics dataframe
2024-04-27 12:29:08,829:INFO:Uploading results into container
2024-04-27 12:29:08,831:INFO:Uploading model into container now
2024-04-27 12:29:08,831:INFO:_master_model_container: 8
2024-04-27 12:29:08,831:INFO:_display_container: 2
2024-04-27 12:29:08,832:INFO:BayesianRidge()
2024-04-27 12:29:08,832:INFO:create_model() successfully completed......................................
2024-04-27 12:29:09,054:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:09,056:INFO:Creating metrics dataframe
2024-04-27 12:29:09,070:INFO:Initializing Passive Aggressive Regressor
2024-04-27 12:29:09,070:INFO:Total runtime is 0.33413507938385006 minutes
2024-04-27 12:29:09,076:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:09,077:INFO:Initializing create_model()
2024-04-27 12:29:09,077:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:09,077:INFO:Checking exceptions
2024-04-27 12:29:09,078:INFO:Importing libraries
2024-04-27 12:29:09,078:INFO:Copying training dataset
2024-04-27 12:29:09,085:INFO:Defining folds
2024-04-27 12:29:09,086:INFO:Declaring metric variables
2024-04-27 12:29:09,092:INFO:Importing untrained model
2024-04-27 12:29:09,098:INFO:Passive Aggressive Regressor Imported successfully
2024-04-27 12:29:09,185:INFO:Starting cross validation
2024-04-27 12:29:09,187:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:09,318:INFO:Calculating mean and std
2024-04-27 12:29:09,320:INFO:Creating metrics dataframe
2024-04-27 12:29:09,323:INFO:Uploading results into container
2024-04-27 12:29:09,324:INFO:Uploading model into container now
2024-04-27 12:29:09,324:INFO:_master_model_container: 9
2024-04-27 12:29:09,325:INFO:_display_container: 2
2024-04-27 12:29:09,325:INFO:PassiveAggressiveRegressor(random_state=123)
2024-04-27 12:29:09,325:INFO:create_model() successfully completed......................................
2024-04-27 12:29:09,541:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:09,542:INFO:Creating metrics dataframe
2024-04-27 12:29:09,555:INFO:Initializing Huber Regressor
2024-04-27 12:29:09,556:INFO:Total runtime is 0.34222905238469437 minutes
2024-04-27 12:29:09,560:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:09,561:INFO:Initializing create_model()
2024-04-27 12:29:09,561:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:09,561:INFO:Checking exceptions
2024-04-27 12:29:09,561:INFO:Importing libraries
2024-04-27 12:29:09,561:INFO:Copying training dataset
2024-04-27 12:29:09,570:INFO:Defining folds
2024-04-27 12:29:09,570:INFO:Declaring metric variables
2024-04-27 12:29:09,576:INFO:Importing untrained model
2024-04-27 12:29:09,581:INFO:Huber Regressor Imported successfully
2024-04-27 12:29:09,593:INFO:Starting cross validation
2024-04-27 12:29:09,596:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:09,752:INFO:Calculating mean and std
2024-04-27 12:29:09,754:INFO:Creating metrics dataframe
2024-04-27 12:29:09,756:INFO:Uploading results into container
2024-04-27 12:29:09,757:INFO:Uploading model into container now
2024-04-27 12:29:09,758:INFO:_master_model_container: 10
2024-04-27 12:29:09,758:INFO:_display_container: 2
2024-04-27 12:29:09,759:INFO:HuberRegressor()
2024-04-27 12:29:09,759:INFO:create_model() successfully completed......................................
2024-04-27 12:29:09,965:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:09,965:INFO:Creating metrics dataframe
2024-04-27 12:29:09,979:INFO:Initializing K Neighbors Regressor
2024-04-27 12:29:09,980:INFO:Total runtime is 0.349294622739156 minutes
2024-04-27 12:29:09,986:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:09,987:INFO:Initializing create_model()
2024-04-27 12:29:09,987:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:09,987:INFO:Checking exceptions
2024-04-27 12:29:09,987:INFO:Importing libraries
2024-04-27 12:29:09,987:INFO:Copying training dataset
2024-04-27 12:29:09,995:INFO:Defining folds
2024-04-27 12:29:09,995:INFO:Declaring metric variables
2024-04-27 12:29:10,001:INFO:Importing untrained model
2024-04-27 12:29:10,007:INFO:K Neighbors Regressor Imported successfully
2024-04-27 12:29:10,017:INFO:Starting cross validation
2024-04-27 12:29:10,018:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:10,177:INFO:Calculating mean and std
2024-04-27 12:29:10,179:INFO:Creating metrics dataframe
2024-04-27 12:29:10,181:INFO:Uploading results into container
2024-04-27 12:29:10,182:INFO:Uploading model into container now
2024-04-27 12:29:10,182:INFO:_master_model_container: 11
2024-04-27 12:29:10,182:INFO:_display_container: 2
2024-04-27 12:29:10,183:INFO:KNeighborsRegressor(n_jobs=-1)
2024-04-27 12:29:10,183:INFO:create_model() successfully completed......................................
2024-04-27 12:29:10,381:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:10,381:INFO:Creating metrics dataframe
2024-04-27 12:29:10,397:INFO:Initializing Decision Tree Regressor
2024-04-27 12:29:10,397:INFO:Total runtime is 0.35624187390009554 minutes
2024-04-27 12:29:10,402:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:10,403:INFO:Initializing create_model()
2024-04-27 12:29:10,403:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:10,403:INFO:Checking exceptions
2024-04-27 12:29:10,403:INFO:Importing libraries
2024-04-27 12:29:10,403:INFO:Copying training dataset
2024-04-27 12:29:10,411:INFO:Defining folds
2024-04-27 12:29:10,411:INFO:Declaring metric variables
2024-04-27 12:29:10,417:INFO:Importing untrained model
2024-04-27 12:29:10,424:INFO:Decision Tree Regressor Imported successfully
2024-04-27 12:29:10,434:INFO:Starting cross validation
2024-04-27 12:29:10,436:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:10,574:INFO:Calculating mean and std
2024-04-27 12:29:10,576:INFO:Creating metrics dataframe
2024-04-27 12:29:10,579:INFO:Uploading results into container
2024-04-27 12:29:10,580:INFO:Uploading model into container now
2024-04-27 12:29:10,580:INFO:_master_model_container: 12
2024-04-27 12:29:10,581:INFO:_display_container: 2
2024-04-27 12:29:10,581:INFO:DecisionTreeRegressor(random_state=123)
2024-04-27 12:29:10,581:INFO:create_model() successfully completed......................................
2024-04-27 12:29:10,779:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:10,779:INFO:Creating metrics dataframe
2024-04-27 12:29:10,793:INFO:Initializing Random Forest Regressor
2024-04-27 12:29:10,794:INFO:Total runtime is 0.3628506104151407 minutes
2024-04-27 12:29:10,799:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:10,799:INFO:Initializing create_model()
2024-04-27 12:29:10,799:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:10,800:INFO:Checking exceptions
2024-04-27 12:29:10,800:INFO:Importing libraries
2024-04-27 12:29:10,800:INFO:Copying training dataset
2024-04-27 12:29:10,807:INFO:Defining folds
2024-04-27 12:29:10,808:INFO:Declaring metric variables
2024-04-27 12:29:10,813:INFO:Importing untrained model
2024-04-27 12:29:10,820:INFO:Random Forest Regressor Imported successfully
2024-04-27 12:29:10,831:INFO:Starting cross validation
2024-04-27 12:29:10,833:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:11,446:INFO:Calculating mean and std
2024-04-27 12:29:11,448:INFO:Creating metrics dataframe
2024-04-27 12:29:11,453:INFO:Uploading results into container
2024-04-27 12:29:11,454:INFO:Uploading model into container now
2024-04-27 12:29:11,454:INFO:_master_model_container: 13
2024-04-27 12:29:11,454:INFO:_display_container: 2
2024-04-27 12:29:11,455:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-04-27 12:29:11,455:INFO:create_model() successfully completed......................................
2024-04-27 12:29:11,661:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:11,661:INFO:Creating metrics dataframe
2024-04-27 12:29:11,678:INFO:Initializing Extra Trees Regressor
2024-04-27 12:29:11,678:INFO:Total runtime is 0.3775905052820841 minutes
2024-04-27 12:29:11,683:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:11,684:INFO:Initializing create_model()
2024-04-27 12:29:11,684:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:11,685:INFO:Checking exceptions
2024-04-27 12:29:11,685:INFO:Importing libraries
2024-04-27 12:29:11,685:INFO:Copying training dataset
2024-04-27 12:29:11,695:INFO:Defining folds
2024-04-27 12:29:11,695:INFO:Declaring metric variables
2024-04-27 12:29:11,702:INFO:Importing untrained model
2024-04-27 12:29:11,709:INFO:Extra Trees Regressor Imported successfully
2024-04-27 12:29:11,720:INFO:Starting cross validation
2024-04-27 12:29:11,722:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:12,154:INFO:Calculating mean and std
2024-04-27 12:29:12,155:INFO:Creating metrics dataframe
2024-04-27 12:29:12,157:INFO:Uploading results into container
2024-04-27 12:29:12,158:INFO:Uploading model into container now
2024-04-27 12:29:12,159:INFO:_master_model_container: 14
2024-04-27 12:29:12,159:INFO:_display_container: 2
2024-04-27 12:29:12,159:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-04-27 12:29:12,160:INFO:create_model() successfully completed......................................
2024-04-27 12:29:12,363:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:12,364:INFO:Creating metrics dataframe
2024-04-27 12:29:12,382:INFO:Initializing AdaBoost Regressor
2024-04-27 12:29:12,382:INFO:Total runtime is 0.3893330375353495 minutes
2024-04-27 12:29:12,390:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:12,391:INFO:Initializing create_model()
2024-04-27 12:29:12,391:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:12,391:INFO:Checking exceptions
2024-04-27 12:29:12,392:INFO:Importing libraries
2024-04-27 12:29:12,392:INFO:Copying training dataset
2024-04-27 12:29:12,400:INFO:Defining folds
2024-04-27 12:29:12,401:INFO:Declaring metric variables
2024-04-27 12:29:12,407:INFO:Importing untrained model
2024-04-27 12:29:12,413:INFO:AdaBoost Regressor Imported successfully
2024-04-27 12:29:12,423:INFO:Starting cross validation
2024-04-27 12:29:12,424:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:12,762:INFO:Calculating mean and std
2024-04-27 12:29:12,764:INFO:Creating metrics dataframe
2024-04-27 12:29:12,767:INFO:Uploading results into container
2024-04-27 12:29:12,768:INFO:Uploading model into container now
2024-04-27 12:29:12,769:INFO:_master_model_container: 15
2024-04-27 12:29:12,769:INFO:_display_container: 2
2024-04-27 12:29:12,769:INFO:AdaBoostRegressor(random_state=123)
2024-04-27 12:29:12,769:INFO:create_model() successfully completed......................................
2024-04-27 12:29:12,971:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:12,971:INFO:Creating metrics dataframe
2024-04-27 12:29:12,988:INFO:Initializing Gradient Boosting Regressor
2024-04-27 12:29:12,989:INFO:Total runtime is 0.3994389414787292 minutes
2024-04-27 12:29:12,996:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:12,996:INFO:Initializing create_model()
2024-04-27 12:29:12,996:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:12,996:INFO:Checking exceptions
2024-04-27 12:29:12,997:INFO:Importing libraries
2024-04-27 12:29:12,997:INFO:Copying training dataset
2024-04-27 12:29:13,006:INFO:Defining folds
2024-04-27 12:29:13,006:INFO:Declaring metric variables
2024-04-27 12:29:13,013:INFO:Importing untrained model
2024-04-27 12:29:13,020:INFO:Gradient Boosting Regressor Imported successfully
2024-04-27 12:29:13,031:INFO:Starting cross validation
2024-04-27 12:29:13,035:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:13,374:INFO:Calculating mean and std
2024-04-27 12:29:13,375:INFO:Creating metrics dataframe
2024-04-27 12:29:13,378:INFO:Uploading results into container
2024-04-27 12:29:13,378:INFO:Uploading model into container now
2024-04-27 12:29:13,379:INFO:_master_model_container: 16
2024-04-27 12:29:13,379:INFO:_display_container: 2
2024-04-27 12:29:13,380:INFO:GradientBoostingRegressor(random_state=123)
2024-04-27 12:29:13,380:INFO:create_model() successfully completed......................................
2024-04-27 12:29:13,578:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:13,578:INFO:Creating metrics dataframe
2024-04-27 12:29:13,593:INFO:Initializing Light Gradient Boosting Machine
2024-04-27 12:29:13,593:INFO:Total runtime is 0.40951881011327107 minutes
2024-04-27 12:29:13,599:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:13,599:INFO:Initializing create_model()
2024-04-27 12:29:13,599:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:13,599:INFO:Checking exceptions
2024-04-27 12:29:13,601:INFO:Importing libraries
2024-04-27 12:29:13,601:INFO:Copying training dataset
2024-04-27 12:29:13,607:INFO:Defining folds
2024-04-27 12:29:13,609:INFO:Declaring metric variables
2024-04-27 12:29:13,614:INFO:Importing untrained model
2024-04-27 12:29:13,620:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-27 12:29:13,630:INFO:Starting cross validation
2024-04-27 12:29:13,631:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:14,815:INFO:Calculating mean and std
2024-04-27 12:29:14,817:INFO:Creating metrics dataframe
2024-04-27 12:29:14,821:INFO:Uploading results into container
2024-04-27 12:29:14,822:INFO:Uploading model into container now
2024-04-27 12:29:14,823:INFO:_master_model_container: 17
2024-04-27 12:29:14,823:INFO:_display_container: 2
2024-04-27 12:29:14,824:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-04-27 12:29:14,824:INFO:create_model() successfully completed......................................
2024-04-27 12:29:15,036:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:15,036:INFO:Creating metrics dataframe
2024-04-27 12:29:15,052:INFO:Initializing CatBoost Regressor
2024-04-27 12:29:15,052:INFO:Total runtime is 0.4338275074958801 minutes
2024-04-27 12:29:15,057:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:15,058:INFO:Initializing create_model()
2024-04-27 12:29:15,058:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:15,058:INFO:Checking exceptions
2024-04-27 12:29:15,058:INFO:Importing libraries
2024-04-27 12:29:15,059:INFO:Copying training dataset
2024-04-27 12:29:15,067:INFO:Defining folds
2024-04-27 12:29:15,067:INFO:Declaring metric variables
2024-04-27 12:29:15,076:INFO:Importing untrained model
2024-04-27 12:29:15,086:INFO:CatBoost Regressor Imported successfully
2024-04-27 12:29:15,098:INFO:Starting cross validation
2024-04-27 12:29:15,099:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:17,504:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
9 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 5807, in fit
    return self._fit(X, y, cat_features, text_features, embedding_features, None, sample_weight, None, None, None, None, baseline,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 2396, in _fit
    self._train(
  File "c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 1776, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 4833, in _catboost._CatBoost._train
  File "_catboost.pyx", line 4882, in _catboost._CatBoost._train
_catboost.CatBoostError: C:/Go_Agent/pipelines/BuildMaster/catboost.git/catboost/libs/train_lib/dir_helper.cpp:20: Can't create train working dir: catboost_info

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2024-04-27 12:29:17,504:INFO:Calculating mean and std
2024-04-27 12:29:17,506:INFO:Creating metrics dataframe
2024-04-27 12:29:17,509:INFO:Uploading results into container
2024-04-27 12:29:17,510:INFO:Uploading model into container now
2024-04-27 12:29:17,511:INFO:_master_model_container: 18
2024-04-27 12:29:17,511:INFO:_display_container: 2
2024-04-27 12:29:17,511:INFO:<catboost.core.CatBoostRegressor object at 0x0000020233A87090>
2024-04-27 12:29:17,511:INFO:create_model() successfully completed......................................
2024-04-27 12:29:17,711:WARNING:create_model() for <catboost.core.CatBoostRegressor object at 0x0000020233A87090> raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-27 12:29:17,720:WARNING:Traceback (most recent call last):
  File "c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2024-04-27 12:29:17,720:INFO:Initializing create_model()
2024-04-27 12:29:17,720:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:17,720:INFO:Checking exceptions
2024-04-27 12:29:17,720:INFO:Importing libraries
2024-04-27 12:29:17,720:INFO:Copying training dataset
2024-04-27 12:29:17,728:INFO:Defining folds
2024-04-27 12:29:17,728:INFO:Declaring metric variables
2024-04-27 12:29:17,733:INFO:Importing untrained model
2024-04-27 12:29:17,738:INFO:CatBoost Regressor Imported successfully
2024-04-27 12:29:17,748:INFO:Starting cross validation
2024-04-27 12:29:17,750:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:24,239:INFO:Calculating mean and std
2024-04-27 12:29:24,241:INFO:Creating metrics dataframe
2024-04-27 12:29:24,244:INFO:Uploading results into container
2024-04-27 12:29:24,244:INFO:Uploading model into container now
2024-04-27 12:29:24,245:INFO:_master_model_container: 19
2024-04-27 12:29:24,245:INFO:_display_container: 2
2024-04-27 12:29:24,245:INFO:<catboost.core.CatBoostRegressor object at 0x000002023AFEE0D0>
2024-04-27 12:29:24,245:INFO:create_model() successfully completed......................................
2024-04-27 12:29:24,481:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:24,481:INFO:Creating metrics dataframe
2024-04-27 12:29:24,497:INFO:Initializing Dummy Regressor
2024-04-27 12:29:24,498:INFO:Total runtime is 0.591267732779185 minutes
2024-04-27 12:29:24,503:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:24,503:INFO:Initializing create_model()
2024-04-27 12:29:24,504:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B4BD9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:24,504:INFO:Checking exceptions
2024-04-27 12:29:24,504:INFO:Importing libraries
2024-04-27 12:29:24,504:INFO:Copying training dataset
2024-04-27 12:29:24,512:INFO:Defining folds
2024-04-27 12:29:24,512:INFO:Declaring metric variables
2024-04-27 12:29:24,518:INFO:Importing untrained model
2024-04-27 12:29:24,523:INFO:Dummy Regressor Imported successfully
2024-04-27 12:29:24,533:INFO:Starting cross validation
2024-04-27 12:29:24,535:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:24,651:INFO:Calculating mean and std
2024-04-27 12:29:24,657:INFO:Creating metrics dataframe
2024-04-27 12:29:24,661:INFO:Uploading results into container
2024-04-27 12:29:24,662:INFO:Uploading model into container now
2024-04-27 12:29:24,662:INFO:_master_model_container: 20
2024-04-27 12:29:24,662:INFO:_display_container: 2
2024-04-27 12:29:24,663:INFO:DummyRegressor()
2024-04-27 12:29:24,663:INFO:create_model() successfully completed......................................
2024-04-27 12:29:24,917:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:24,917:INFO:Creating metrics dataframe
2024-04-27 12:29:24,934:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-27 12:29:24,947:INFO:Initializing create_model()
2024-04-27 12:29:24,947:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:24,947:INFO:Checking exceptions
2024-04-27 12:29:24,950:INFO:Importing libraries
2024-04-27 12:29:24,950:INFO:Copying training dataset
2024-04-27 12:29:24,956:INFO:Defining folds
2024-04-27 12:29:24,958:INFO:Declaring metric variables
2024-04-27 12:29:24,958:INFO:Importing untrained model
2024-04-27 12:29:24,958:INFO:Declaring custom model
2024-04-27 12:29:24,959:INFO:Extra Trees Regressor Imported successfully
2024-04-27 12:29:24,960:INFO:Cross validation set to False
2024-04-27 12:29:24,960:INFO:Fitting Model
2024-04-27 12:29:25,112:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-04-27 12:29:25,113:INFO:create_model() successfully completed......................................
2024-04-27 12:29:25,349:INFO:_master_model_container: 20
2024-04-27 12:29:25,350:INFO:_display_container: 2
2024-04-27 12:29:25,351:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-04-27 12:29:25,351:INFO:compare_models() successfully completed......................................
2024-04-27 12:29:25,352:INFO:Initializing tune_model()
2024-04-27 12:29:25,352:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-27 12:29:25,352:INFO:Checking exceptions
2024-04-27 12:29:25,384:INFO:Copying training dataset
2024-04-27 12:29:25,393:INFO:Checking base model
2024-04-27 12:29:25,394:INFO:Base model : Extra Trees Regressor
2024-04-27 12:29:25,401:INFO:Declaring metric variables
2024-04-27 12:29:25,409:INFO:Defining Hyperparameters
2024-04-27 12:29:25,638:INFO:Tuning with n_jobs=-1
2024-04-27 12:29:25,638:INFO:Initializing RandomizedSearchCV
2024-04-27 12:29:29,889:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2024-04-27 12:29:29,890:INFO:Hyperparameter search completed
2024-04-27 12:29:29,890:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:29,891:INFO:Initializing create_model()
2024-04-27 12:29:29,891:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000202321C1210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 240, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0001, 'max_features': 'sqrt', 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': False})
2024-04-27 12:29:29,891:INFO:Checking exceptions
2024-04-27 12:29:29,891:INFO:Importing libraries
2024-04-27 12:29:29,892:INFO:Copying training dataset
2024-04-27 12:29:29,899:INFO:Defining folds
2024-04-27 12:29:29,899:INFO:Declaring metric variables
2024-04-27 12:29:29,905:INFO:Importing untrained model
2024-04-27 12:29:29,905:INFO:Declaring custom model
2024-04-27 12:29:29,912:INFO:Extra Trees Regressor Imported successfully
2024-04-27 12:29:29,923:INFO:Starting cross validation
2024-04-27 12:29:29,925:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:30,554:INFO:Calculating mean and std
2024-04-27 12:29:30,556:INFO:Creating metrics dataframe
2024-04-27 12:29:30,563:INFO:Finalizing model
2024-04-27 12:29:30,872:INFO:Uploading results into container
2024-04-27 12:29:30,873:INFO:Uploading model into container now
2024-04-27 12:29:30,874:INFO:_master_model_container: 21
2024-04-27 12:29:30,874:INFO:_display_container: 3
2024-04-27 12:29:30,876:INFO:ExtraTreesRegressor(max_depth=8, max_features='sqrt',
                    min_impurity_decrease=0.0001, min_samples_leaf=2,
                    min_samples_split=5, n_estimators=240, n_jobs=-1,
                    random_state=123)
2024-04-27 12:29:30,876:INFO:create_model() successfully completed......................................
2024-04-27 12:29:31,090:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:31,091:INFO:choose_better activated
2024-04-27 12:29:31,096:INFO:SubProcess create_model() called ==================================
2024-04-27 12:29:31,096:INFO:Initializing create_model()
2024-04-27 12:29:31,097:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:31,097:INFO:Checking exceptions
2024-04-27 12:29:31,100:INFO:Importing libraries
2024-04-27 12:29:31,100:INFO:Copying training dataset
2024-04-27 12:29:31,106:INFO:Defining folds
2024-04-27 12:29:31,106:INFO:Declaring metric variables
2024-04-27 12:29:31,107:INFO:Importing untrained model
2024-04-27 12:29:31,107:INFO:Declaring custom model
2024-04-27 12:29:31,108:INFO:Extra Trees Regressor Imported successfully
2024-04-27 12:29:31,108:INFO:Starting cross validation
2024-04-27 12:29:31,109:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:29:31,578:INFO:Calculating mean and std
2024-04-27 12:29:31,578:INFO:Creating metrics dataframe
2024-04-27 12:29:31,580:INFO:Finalizing model
2024-04-27 12:29:31,720:INFO:Uploading results into container
2024-04-27 12:29:31,721:INFO:Uploading model into container now
2024-04-27 12:29:31,722:INFO:_master_model_container: 22
2024-04-27 12:29:31,722:INFO:_display_container: 4
2024-04-27 12:29:31,722:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-04-27 12:29:31,722:INFO:create_model() successfully completed......................................
2024-04-27 12:29:31,930:INFO:SubProcess create_model() end ==================================
2024-04-27 12:29:31,932:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123) result for R2 is 0.4041
2024-04-27 12:29:31,934:INFO:ExtraTreesRegressor(max_depth=8, max_features='sqrt',
                    min_impurity_decrease=0.0001, min_samples_leaf=2,
                    min_samples_split=5, n_estimators=240, n_jobs=-1,
                    random_state=123) result for R2 is 0.2903
2024-04-27 12:29:31,934:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123) is best model
2024-04-27 12:29:31,934:INFO:choose_better completed
2024-04-27 12:29:31,935:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-27 12:29:31,950:INFO:_master_model_container: 22
2024-04-27 12:29:31,952:INFO:_display_container: 3
2024-04-27 12:29:31,952:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-04-27 12:29:31,953:INFO:tune_model() successfully completed......................................
2024-04-27 12:29:32,160:INFO:Initializing evaluate_model()
2024-04-27 12:29:32,160:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-27 12:29:32,188:INFO:Initializing plot_model()
2024-04-27 12:29:32,188:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=pipeline, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-04-27 12:29:32,188:INFO:Checking exceptions
2024-04-27 12:29:32,227:INFO:Preloading libraries
2024-04-27 12:29:32,243:INFO:Copying training dataset
2024-04-27 12:29:32,243:INFO:Plot type: pipeline
2024-04-27 12:29:32,488:INFO:Visual Rendered Successfully
2024-04-27 12:29:32,717:INFO:plot_model() successfully completed......................................
2024-04-27 12:29:32,723:INFO:Initializing finalize_model()
2024-04-27 12:29:32,723:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-27 12:29:32,723:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-04-27 12:29:32,728:INFO:Initializing create_model()
2024-04-27 12:29:32,729:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:29:32,729:INFO:Checking exceptions
2024-04-27 12:29:32,731:INFO:Importing libraries
2024-04-27 12:29:32,732:INFO:Copying training dataset
2024-04-27 12:29:32,733:INFO:Defining folds
2024-04-27 12:29:32,733:INFO:Declaring metric variables
2024-04-27 12:29:32,734:INFO:Importing untrained model
2024-04-27 12:29:32,734:INFO:Declaring custom model
2024-04-27 12:29:32,736:INFO:Extra Trees Regressor Imported successfully
2024-04-27 12:29:32,737:INFO:Cross validation set to False
2024-04-27 12:29:32,737:INFO:Fitting Model
2024-04-27 12:29:32,892:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2024-04-27 12:29:32,892:INFO:create_model() successfully completed......................................
2024-04-27 12:29:33,113:INFO:_master_model_container: 22
2024-04-27 12:29:33,114:INFO:_display_container: 3
2024-04-27 12:29:33,124:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2024-04-27 12:29:33,124:INFO:finalize_model() successfully completed......................................
2024-04-27 12:29:33,362:INFO:Initializing save_model()
2024-04-27 12:29:33,362:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), model_name=heart_failure_classification_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\USER\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-04-27 12:29:33,363:INFO:Adding model into prep_pipe
2024-04-27 12:29:33,363:WARNING:Only Model saved as it was a pipeline.
2024-04-27 12:29:33,425:INFO:heart_failure_classification_model.pkl saved in current working directory
2024-04-27 12:29:33,433:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2024-04-27 12:29:33,434:INFO:save_model() successfully completed......................................
2024-04-27 12:29:55,094:INFO:Initializing plot_model()
2024-04-27 12:29:55,095:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002023A9A0350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), plot=feature, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-04-27 12:29:55,095:INFO:Checking exceptions
2024-04-27 12:29:55,136:INFO:Preloading libraries
2024-04-27 12:29:55,146:INFO:Copying training dataset
2024-04-27 12:29:55,146:INFO:Plot type: feature
2024-04-27 12:29:55,146:WARNING:No coef_ found. Trying feature_importances_
2024-04-27 12:29:55,437:INFO:Visual Rendered Successfully
2024-04-27 12:29:55,631:INFO:plot_model() successfully completed......................................
2024-04-27 12:33:30,748:INFO:PyCaret ClassificationExperiment
2024-04-27 12:33:30,748:INFO:Logging name: clf-default-name
2024-04-27 12:33:30,748:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-27 12:33:30,748:INFO:version 3.3.1
2024-04-27 12:33:30,748:INFO:Initializing setup()
2024-04-27 12:33:30,749:INFO:self.USI: a689
2024-04-27 12:33:30,749:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'memory', 'html_param', 'X', 'fix_imbalance', 'logging_param', 'is_multiclass', 'exp_id', 'X_test', 'fold_groups_param', 'y', 'gpu_n_jobs_param', 'gpu_param', 'target_param', 'X_train', '_ml_usecase', 'fold_generator', 'data', 'seed', 'idx', 'exp_name_log', 'pipeline', 'y_train', 'USI', 'y_test'}
2024-04-27 12:33:30,749:INFO:Checking environment
2024-04-27 12:33:30,749:INFO:python_version: 3.11.5
2024-04-27 12:33:30,749:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-04-27 12:33:30,749:INFO:machine: AMD64
2024-04-27 12:33:30,749:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-27 12:33:30,759:INFO:Memory: svmem(total=7952347136, available=984354816, percent=87.6, used=6967992320, free=984354816)
2024-04-27 12:33:30,759:INFO:Physical Core: 6
2024-04-27 12:33:30,759:INFO:Logical Core: 12
2024-04-27 12:33:30,759:INFO:Checking libraries
2024-04-27 12:33:30,759:INFO:System:
2024-04-27 12:33:30,760:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-04-27 12:33:30,760:INFO:executable: c:\Users\USER\AppData\Local\Programs\Python\Python311\python.exe
2024-04-27 12:33:30,760:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-27 12:33:30,760:INFO:PyCaret required dependencies:
2024-04-27 12:33:30,760:INFO:                 pip: 24.0
2024-04-27 12:33:30,760:INFO:          setuptools: 69.5.1
2024-04-27 12:33:30,760:INFO:             pycaret: 3.3.1
2024-04-27 12:33:30,760:INFO:             IPython: 8.22.2
2024-04-27 12:33:30,760:INFO:          ipywidgets: 8.1.2
2024-04-27 12:33:30,761:INFO:                tqdm: 4.66.2
2024-04-27 12:33:30,761:INFO:               numpy: 1.25.2
2024-04-27 12:33:30,761:INFO:              pandas: 2.1.4
2024-04-27 12:33:30,761:INFO:              jinja2: 3.1.3
2024-04-27 12:33:30,761:INFO:               scipy: 1.11.4
2024-04-27 12:33:30,761:INFO:              joblib: 1.3.2
2024-04-27 12:33:30,761:INFO:             sklearn: 1.4.2
2024-04-27 12:33:30,761:INFO:                pyod: 1.1.3
2024-04-27 12:33:30,761:INFO:            imblearn: 0.12.0
2024-04-27 12:33:30,761:INFO:   category_encoders: 2.6.3
2024-04-27 12:33:30,761:INFO:            lightgbm: 4.3.0
2024-04-27 12:33:30,761:INFO:               numba: 0.58.1
2024-04-27 12:33:30,762:INFO:            requests: 2.31.0
2024-04-27 12:33:30,762:INFO:          matplotlib: 3.7.5
2024-04-27 12:33:30,762:INFO:          scikitplot: 0.3.7
2024-04-27 12:33:30,762:INFO:         yellowbrick: 1.5
2024-04-27 12:33:30,762:INFO:              plotly: 5.19.0
2024-04-27 12:33:30,762:INFO:    plotly-resampler: Not installed
2024-04-27 12:33:30,762:INFO:             kaleido: 0.2.1
2024-04-27 12:33:30,762:INFO:           schemdraw: 0.15
2024-04-27 12:33:30,762:INFO:         statsmodels: 0.14.1
2024-04-27 12:33:30,762:INFO:              sktime: 0.26.0
2024-04-27 12:33:30,762:INFO:               tbats: 1.1.3
2024-04-27 12:33:30,763:INFO:            pmdarima: 2.0.4
2024-04-27 12:33:30,763:INFO:              psutil: 5.9.8
2024-04-27 12:33:30,763:INFO:          markupsafe: 2.1.5
2024-04-27 12:33:30,763:INFO:             pickle5: Not installed
2024-04-27 12:33:30,763:INFO:         cloudpickle: 3.0.0
2024-04-27 12:33:30,763:INFO:         deprecation: 2.1.0
2024-04-27 12:33:30,763:INFO:              xxhash: 3.4.1
2024-04-27 12:33:30,763:INFO:           wurlitzer: Not installed
2024-04-27 12:33:30,763:INFO:PyCaret optional dependencies:
2024-04-27 12:33:30,763:INFO:                shap: 0.45.0
2024-04-27 12:33:30,764:INFO:           interpret: 0.5.1
2024-04-27 12:33:30,764:INFO:                umap: 0.5.5
2024-04-27 12:33:30,764:INFO:     ydata_profiling: 4.6.5
2024-04-27 12:33:30,764:INFO:  explainerdashboard: 0.4.6
2024-04-27 12:33:30,764:INFO:             autoviz: Not installed
2024-04-27 12:33:30,764:INFO:           fairlearn: 0.7.0
2024-04-27 12:33:30,764:INFO:          deepchecks: Not installed
2024-04-27 12:33:30,764:INFO:             xgboost: Not installed
2024-04-27 12:33:30,764:INFO:            catboost: 1.2.3
2024-04-27 12:33:30,764:INFO:              kmodes: 0.12.2
2024-04-27 12:33:30,764:INFO:             mlxtend: 0.23.1
2024-04-27 12:33:30,764:INFO:       statsforecast: 1.5.0
2024-04-27 12:33:30,765:INFO:        tune_sklearn: Not installed
2024-04-27 12:33:30,765:INFO:                 ray: Not installed
2024-04-27 12:33:30,765:INFO:            hyperopt: 0.2.7
2024-04-27 12:33:30,765:INFO:              optuna: 3.5.0
2024-04-27 12:33:30,765:INFO:               skopt: 0.10.0
2024-04-27 12:33:30,765:INFO:              mlflow: 2.11.3
2024-04-27 12:33:30,765:INFO:              gradio: 4.21.0
2024-04-27 12:33:30,765:INFO:             fastapi: 0.110.0
2024-04-27 12:33:30,765:INFO:             uvicorn: 0.28.0
2024-04-27 12:33:30,765:INFO:              m2cgen: 0.10.0
2024-04-27 12:33:30,765:INFO:           evidently: 0.4.16
2024-04-27 12:33:30,766:INFO:               fugue: 0.8.6
2024-04-27 12:33:30,766:INFO:           streamlit: 1.33.0
2024-04-27 12:33:30,766:INFO:             prophet: Not installed
2024-04-27 12:33:30,766:INFO:None
2024-04-27 12:33:30,766:INFO:Set up data.
2024-04-27 12:33:30,794:INFO:Set up folding strategy.
2024-04-27 12:33:30,794:INFO:Set up train/test split.
2024-04-27 12:33:30,810:INFO:Set up index.
2024-04-27 12:33:30,818:INFO:Assigning column types.
2024-04-27 12:33:30,826:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-27 12:33:30,916:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-27 12:33:30,924:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-27 12:33:30,981:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:33:30,981:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:33:31,062:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-27 12:33:31,063:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-27 12:33:31,115:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:33:31,115:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:33:31,116:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-27 12:33:31,199:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-27 12:33:31,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:33:31,253:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:33:31,342:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-27 12:33:31,397:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:33:31,398:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:33:31,399:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-27 12:33:31,536:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:33:31,537:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:33:31,673:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:33:31,673:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:33:31,676:INFO:Preparing preprocessing pipeline...
2024-04-27 12:33:31,684:INFO:Set up simple imputation.
2024-04-27 12:33:31,714:INFO:Finished creating preprocessing pipeline.
2024-04-27 12:33:31,718:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\USER\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-04-27 12:33:31,718:INFO:Creating final display dataframe.
2024-04-27 12:33:31,821:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target       DEATH_EVENT
2                   Target type            Binary
3           Original data shape         (299, 13)
4        Transformed data shape         (299, 13)
5   Transformed train set shape         (209, 13)
6    Transformed test set shape          (90, 13)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              a689
2024-04-27 12:33:31,975:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:33:31,976:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:33:32,108:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-27 12:33:32,109:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-27 12:33:32,112:INFO:setup() successfully completed in 1.37s...............
2024-04-27 12:33:32,114:INFO:Initializing compare_models()
2024-04-27 12:33:32,115:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-27 12:33:32,115:INFO:Checking exceptions
2024-04-27 12:33:32,124:INFO:Preparing display monitor
2024-04-27 12:33:32,155:INFO:Initializing Logistic Regression
2024-04-27 12:33:32,157:INFO:Total runtime is 2.4799505869547526e-05 minutes
2024-04-27 12:33:32,163:INFO:SubProcess create_model() called ==================================
2024-04-27 12:33:32,164:INFO:Initializing create_model()
2024-04-27 12:33:32,164:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020233A255D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:32,164:INFO:Checking exceptions
2024-04-27 12:33:32,164:INFO:Importing libraries
2024-04-27 12:33:32,166:INFO:Copying training dataset
2024-04-27 12:33:32,173:INFO:Defining folds
2024-04-27 12:33:32,173:INFO:Declaring metric variables
2024-04-27 12:33:32,178:INFO:Importing untrained model
2024-04-27 12:33:32,185:INFO:Logistic Regression Imported successfully
2024-04-27 12:33:32,195:INFO:Starting cross validation
2024-04-27 12:33:32,197:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:33:32,580:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-27 12:33:32,580:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-27 12:33:32,580:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-27 12:33:32,581:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-27 12:33:32,581:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-27 12:33:32,581:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-27 12:33:32,640:INFO:Calculating mean and std
2024-04-27 12:33:32,641:INFO:Creating metrics dataframe
2024-04-27 12:33:32,643:INFO:Uploading results into container
2024-04-27 12:33:32,643:INFO:Uploading model into container now
2024-04-27 12:33:32,644:INFO:_master_model_container: 1
2024-04-27 12:33:32,644:INFO:_display_container: 2
2024-04-27 12:33:32,645:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-27 12:33:32,645:INFO:create_model() successfully completed......................................
2024-04-27 12:33:32,860:INFO:SubProcess create_model() end ==================================
2024-04-27 12:33:32,860:INFO:Creating metrics dataframe
2024-04-27 12:33:32,869:INFO:Initializing K Neighbors Classifier
2024-04-27 12:33:32,869:INFO:Total runtime is 0.011906723181406658 minutes
2024-04-27 12:33:32,876:INFO:SubProcess create_model() called ==================================
2024-04-27 12:33:32,876:INFO:Initializing create_model()
2024-04-27 12:33:32,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020233A255D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:32,876:INFO:Checking exceptions
2024-04-27 12:33:32,877:INFO:Importing libraries
2024-04-27 12:33:32,877:INFO:Copying training dataset
2024-04-27 12:33:32,889:INFO:Defining folds
2024-04-27 12:33:32,890:INFO:Declaring metric variables
2024-04-27 12:33:32,959:INFO:Importing untrained model
2024-04-27 12:33:32,966:INFO:K Neighbors Classifier Imported successfully
2024-04-27 12:33:32,985:INFO:Starting cross validation
2024-04-27 12:33:32,987:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:33:33,184:INFO:Calculating mean and std
2024-04-27 12:33:33,186:INFO:Creating metrics dataframe
2024-04-27 12:33:33,189:INFO:Uploading results into container
2024-04-27 12:33:33,190:INFO:Uploading model into container now
2024-04-27 12:33:33,191:INFO:_master_model_container: 2
2024-04-27 12:33:33,191:INFO:_display_container: 2
2024-04-27 12:33:33,191:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-27 12:33:33,191:INFO:create_model() successfully completed......................................
2024-04-27 12:33:33,395:INFO:SubProcess create_model() end ==================================
2024-04-27 12:33:33,395:INFO:Creating metrics dataframe
2024-04-27 12:33:33,406:INFO:Initializing Naive Bayes
2024-04-27 12:33:33,407:INFO:Total runtime is 0.020858899752298994 minutes
2024-04-27 12:33:33,412:INFO:SubProcess create_model() called ==================================
2024-04-27 12:33:33,412:INFO:Initializing create_model()
2024-04-27 12:33:33,412:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020233A255D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:33,412:INFO:Checking exceptions
2024-04-27 12:33:33,412:INFO:Importing libraries
2024-04-27 12:33:33,412:INFO:Copying training dataset
2024-04-27 12:33:33,420:INFO:Defining folds
2024-04-27 12:33:33,420:INFO:Declaring metric variables
2024-04-27 12:33:33,425:INFO:Importing untrained model
2024-04-27 12:33:33,430:INFO:Naive Bayes Imported successfully
2024-04-27 12:33:33,442:INFO:Starting cross validation
2024-04-27 12:33:33,444:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:33:33,571:INFO:Calculating mean and std
2024-04-27 12:33:33,573:INFO:Creating metrics dataframe
2024-04-27 12:33:33,576:INFO:Uploading results into container
2024-04-27 12:33:33,577:INFO:Uploading model into container now
2024-04-27 12:33:33,577:INFO:_master_model_container: 3
2024-04-27 12:33:33,577:INFO:_display_container: 2
2024-04-27 12:33:33,577:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-27 12:33:33,577:INFO:create_model() successfully completed......................................
2024-04-27 12:33:33,785:INFO:SubProcess create_model() end ==================================
2024-04-27 12:33:33,785:INFO:Creating metrics dataframe
2024-04-27 12:33:33,798:INFO:Initializing Decision Tree Classifier
2024-04-27 12:33:33,798:INFO:Total runtime is 0.027377510070800783 minutes
2024-04-27 12:33:33,802:INFO:SubProcess create_model() called ==================================
2024-04-27 12:33:33,803:INFO:Initializing create_model()
2024-04-27 12:33:33,803:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020233A255D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:33,803:INFO:Checking exceptions
2024-04-27 12:33:33,803:INFO:Importing libraries
2024-04-27 12:33:33,803:INFO:Copying training dataset
2024-04-27 12:33:33,812:INFO:Defining folds
2024-04-27 12:33:33,812:INFO:Declaring metric variables
2024-04-27 12:33:33,819:INFO:Importing untrained model
2024-04-27 12:33:33,825:INFO:Decision Tree Classifier Imported successfully
2024-04-27 12:33:33,836:INFO:Starting cross validation
2024-04-27 12:33:33,838:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:33:33,976:INFO:Calculating mean and std
2024-04-27 12:33:33,978:INFO:Creating metrics dataframe
2024-04-27 12:33:33,981:INFO:Uploading results into container
2024-04-27 12:33:33,982:INFO:Uploading model into container now
2024-04-27 12:33:33,983:INFO:_master_model_container: 4
2024-04-27 12:33:33,983:INFO:_display_container: 2
2024-04-27 12:33:33,984:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-04-27 12:33:33,984:INFO:create_model() successfully completed......................................
2024-04-27 12:33:34,190:INFO:SubProcess create_model() end ==================================
2024-04-27 12:33:34,190:INFO:Creating metrics dataframe
2024-04-27 12:33:34,201:INFO:Initializing SVM - Linear Kernel
2024-04-27 12:33:34,201:INFO:Total runtime is 0.03409744501113892 minutes
2024-04-27 12:33:34,207:INFO:SubProcess create_model() called ==================================
2024-04-27 12:33:34,207:INFO:Initializing create_model()
2024-04-27 12:33:34,207:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020233A255D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:34,207:INFO:Checking exceptions
2024-04-27 12:33:34,207:INFO:Importing libraries
2024-04-27 12:33:34,208:INFO:Copying training dataset
2024-04-27 12:33:34,218:INFO:Defining folds
2024-04-27 12:33:34,218:INFO:Declaring metric variables
2024-04-27 12:33:34,224:INFO:Importing untrained model
2024-04-27 12:33:34,234:INFO:SVM - Linear Kernel Imported successfully
2024-04-27 12:33:34,250:INFO:Starting cross validation
2024-04-27 12:33:34,252:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:33:34,385:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-27 12:33:34,385:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-27 12:33:34,385:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-27 12:33:34,385:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-27 12:33:34,387:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-27 12:33:34,387:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-27 12:33:34,413:INFO:Calculating mean and std
2024-04-27 12:33:34,415:INFO:Creating metrics dataframe
2024-04-27 12:33:34,417:INFO:Uploading results into container
2024-04-27 12:33:34,418:INFO:Uploading model into container now
2024-04-27 12:33:34,419:INFO:_master_model_container: 5
2024-04-27 12:33:34,419:INFO:_display_container: 2
2024-04-27 12:33:34,420:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-27 12:33:34,420:INFO:create_model() successfully completed......................................
2024-04-27 12:33:34,631:INFO:SubProcess create_model() end ==================================
2024-04-27 12:33:34,632:INFO:Creating metrics dataframe
2024-04-27 12:33:34,648:INFO:Initializing Ridge Classifier
2024-04-27 12:33:34,648:INFO:Total runtime is 0.041541663805643725 minutes
2024-04-27 12:33:34,654:INFO:SubProcess create_model() called ==================================
2024-04-27 12:33:34,655:INFO:Initializing create_model()
2024-04-27 12:33:34,655:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020233A255D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:34,655:INFO:Checking exceptions
2024-04-27 12:33:34,656:INFO:Importing libraries
2024-04-27 12:33:34,656:INFO:Copying training dataset
2024-04-27 12:33:34,663:INFO:Defining folds
2024-04-27 12:33:34,664:INFO:Declaring metric variables
2024-04-27 12:33:34,669:INFO:Importing untrained model
2024-04-27 12:33:34,676:INFO:Ridge Classifier Imported successfully
2024-04-27 12:33:34,688:INFO:Starting cross validation
2024-04-27 12:33:34,689:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:33:34,837:INFO:Calculating mean and std
2024-04-27 12:33:34,840:INFO:Creating metrics dataframe
2024-04-27 12:33:34,843:INFO:Uploading results into container
2024-04-27 12:33:34,844:INFO:Uploading model into container now
2024-04-27 12:33:34,845:INFO:_master_model_container: 6
2024-04-27 12:33:34,845:INFO:_display_container: 2
2024-04-27 12:33:34,845:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-04-27 12:33:34,846:INFO:create_model() successfully completed......................................
2024-04-27 12:33:35,050:INFO:SubProcess create_model() end ==================================
2024-04-27 12:33:35,051:INFO:Creating metrics dataframe
2024-04-27 12:33:35,065:INFO:Initializing Random Forest Classifier
2024-04-27 12:33:35,066:INFO:Total runtime is 0.04850908915201824 minutes
2024-04-27 12:33:35,070:INFO:SubProcess create_model() called ==================================
2024-04-27 12:33:35,072:INFO:Initializing create_model()
2024-04-27 12:33:35,072:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020233A255D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:35,072:INFO:Checking exceptions
2024-04-27 12:33:35,072:INFO:Importing libraries
2024-04-27 12:33:35,072:INFO:Copying training dataset
2024-04-27 12:33:35,079:INFO:Defining folds
2024-04-27 12:33:35,079:INFO:Declaring metric variables
2024-04-27 12:33:35,086:INFO:Importing untrained model
2024-04-27 12:33:35,095:INFO:Random Forest Classifier Imported successfully
2024-04-27 12:33:35,117:INFO:Starting cross validation
2024-04-27 12:33:35,119:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:33:35,766:INFO:Calculating mean and std
2024-04-27 12:33:35,768:INFO:Creating metrics dataframe
2024-04-27 12:33:35,770:INFO:Uploading results into container
2024-04-27 12:33:35,771:INFO:Uploading model into container now
2024-04-27 12:33:35,772:INFO:_master_model_container: 7
2024-04-27 12:33:35,772:INFO:_display_container: 2
2024-04-27 12:33:35,773:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-04-27 12:33:35,774:INFO:create_model() successfully completed......................................
2024-04-27 12:33:35,973:INFO:SubProcess create_model() end ==================================
2024-04-27 12:33:35,973:INFO:Creating metrics dataframe
2024-04-27 12:33:35,987:INFO:Initializing Quadratic Discriminant Analysis
2024-04-27 12:33:35,988:INFO:Total runtime is 0.06387420495351157 minutes
2024-04-27 12:33:35,994:INFO:SubProcess create_model() called ==================================
2024-04-27 12:33:35,995:INFO:Initializing create_model()
2024-04-27 12:33:35,995:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020233A255D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:35,995:INFO:Checking exceptions
2024-04-27 12:33:35,995:INFO:Importing libraries
2024-04-27 12:33:35,995:INFO:Copying training dataset
2024-04-27 12:33:36,002:INFO:Defining folds
2024-04-27 12:33:36,002:INFO:Declaring metric variables
2024-04-27 12:33:36,009:INFO:Importing untrained model
2024-04-27 12:33:36,015:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-27 12:33:36,027:INFO:Starting cross validation
2024-04-27 12:33:36,028:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:33:36,145:INFO:Calculating mean and std
2024-04-27 12:33:36,147:INFO:Creating metrics dataframe
2024-04-27 12:33:36,150:INFO:Uploading results into container
2024-04-27 12:33:36,151:INFO:Uploading model into container now
2024-04-27 12:33:36,151:INFO:_master_model_container: 8
2024-04-27 12:33:36,151:INFO:_display_container: 2
2024-04-27 12:33:36,152:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-04-27 12:33:36,152:INFO:create_model() successfully completed......................................
2024-04-27 12:33:36,399:INFO:SubProcess create_model() end ==================================
2024-04-27 12:33:36,399:INFO:Creating metrics dataframe
2024-04-27 12:33:36,418:INFO:Initializing Ada Boost Classifier
2024-04-27 12:33:36,418:INFO:Total runtime is 0.07105685869852703 minutes
2024-04-27 12:33:36,425:INFO:SubProcess create_model() called ==================================
2024-04-27 12:33:36,425:INFO:Initializing create_model()
2024-04-27 12:33:36,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020233A255D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:36,426:INFO:Checking exceptions
2024-04-27 12:33:36,426:INFO:Importing libraries
2024-04-27 12:33:36,426:INFO:Copying training dataset
2024-04-27 12:33:36,434:INFO:Defining folds
2024-04-27 12:33:36,434:INFO:Declaring metric variables
2024-04-27 12:33:36,439:INFO:Importing untrained model
2024-04-27 12:33:36,446:INFO:Ada Boost Classifier Imported successfully
2024-04-27 12:33:36,459:INFO:Starting cross validation
2024-04-27 12:33:36,460:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:33:36,528:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-27 12:33:36,529:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-27 12:33:36,529:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-27 12:33:36,529:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-27 12:33:36,529:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-27 12:33:36,529:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-27 12:33:36,529:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-27 12:33:36,529:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-27 12:33:36,529:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-27 12:33:36,529:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-27 12:33:36,774:INFO:Calculating mean and std
2024-04-27 12:33:36,776:INFO:Creating metrics dataframe
2024-04-27 12:33:36,779:INFO:Uploading results into container
2024-04-27 12:33:36,780:INFO:Uploading model into container now
2024-04-27 12:33:36,781:INFO:_master_model_container: 9
2024-04-27 12:33:36,781:INFO:_display_container: 2
2024-04-27 12:33:36,782:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-04-27 12:33:36,782:INFO:create_model() successfully completed......................................
2024-04-27 12:33:36,990:INFO:SubProcess create_model() end ==================================
2024-04-27 12:33:36,990:INFO:Creating metrics dataframe
2024-04-27 12:33:37,005:INFO:Initializing Gradient Boosting Classifier
2024-04-27 12:33:37,005:INFO:Total runtime is 0.0808267633120219 minutes
2024-04-27 12:33:37,012:INFO:SubProcess create_model() called ==================================
2024-04-27 12:33:37,012:INFO:Initializing create_model()
2024-04-27 12:33:37,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020233A255D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:37,013:INFO:Checking exceptions
2024-04-27 12:33:37,013:INFO:Importing libraries
2024-04-27 12:33:37,013:INFO:Copying training dataset
2024-04-27 12:33:37,020:INFO:Defining folds
2024-04-27 12:33:37,021:INFO:Declaring metric variables
2024-04-27 12:33:37,028:INFO:Importing untrained model
2024-04-27 12:33:37,033:INFO:Gradient Boosting Classifier Imported successfully
2024-04-27 12:33:37,049:INFO:Starting cross validation
2024-04-27 12:33:37,051:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:33:37,504:INFO:Calculating mean and std
2024-04-27 12:33:37,506:INFO:Creating metrics dataframe
2024-04-27 12:33:37,509:INFO:Uploading results into container
2024-04-27 12:33:37,510:INFO:Uploading model into container now
2024-04-27 12:33:37,511:INFO:_master_model_container: 10
2024-04-27 12:33:37,511:INFO:_display_container: 2
2024-04-27 12:33:37,512:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-04-27 12:33:37,512:INFO:create_model() successfully completed......................................
2024-04-27 12:33:37,729:INFO:SubProcess create_model() end ==================================
2024-04-27 12:33:37,729:INFO:Creating metrics dataframe
2024-04-27 12:33:37,745:INFO:Initializing Linear Discriminant Analysis
2024-04-27 12:33:37,745:INFO:Total runtime is 0.09315835237503053 minutes
2024-04-27 12:33:37,752:INFO:SubProcess create_model() called ==================================
2024-04-27 12:33:37,752:INFO:Initializing create_model()
2024-04-27 12:33:37,752:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020233A255D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:37,752:INFO:Checking exceptions
2024-04-27 12:33:37,752:INFO:Importing libraries
2024-04-27 12:33:37,753:INFO:Copying training dataset
2024-04-27 12:33:37,762:INFO:Defining folds
2024-04-27 12:33:37,763:INFO:Declaring metric variables
2024-04-27 12:33:37,768:INFO:Importing untrained model
2024-04-27 12:33:37,773:INFO:Linear Discriminant Analysis Imported successfully
2024-04-27 12:33:37,784:INFO:Starting cross validation
2024-04-27 12:33:37,786:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:33:37,911:INFO:Calculating mean and std
2024-04-27 12:33:37,912:INFO:Creating metrics dataframe
2024-04-27 12:33:37,915:INFO:Uploading results into container
2024-04-27 12:33:37,916:INFO:Uploading model into container now
2024-04-27 12:33:37,916:INFO:_master_model_container: 11
2024-04-27 12:33:37,917:INFO:_display_container: 2
2024-04-27 12:33:37,917:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-04-27 12:33:37,918:INFO:create_model() successfully completed......................................
2024-04-27 12:33:38,144:INFO:SubProcess create_model() end ==================================
2024-04-27 12:33:38,144:INFO:Creating metrics dataframe
2024-04-27 12:33:38,159:INFO:Initializing Extra Trees Classifier
2024-04-27 12:33:38,159:INFO:Total runtime is 0.10006599426269533 minutes
2024-04-27 12:33:38,164:INFO:SubProcess create_model() called ==================================
2024-04-27 12:33:38,166:INFO:Initializing create_model()
2024-04-27 12:33:38,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020233A255D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:38,166:INFO:Checking exceptions
2024-04-27 12:33:38,166:INFO:Importing libraries
2024-04-27 12:33:38,166:INFO:Copying training dataset
2024-04-27 12:33:38,176:INFO:Defining folds
2024-04-27 12:33:38,176:INFO:Declaring metric variables
2024-04-27 12:33:38,182:INFO:Importing untrained model
2024-04-27 12:33:38,188:INFO:Extra Trees Classifier Imported successfully
2024-04-27 12:33:38,200:INFO:Starting cross validation
2024-04-27 12:33:38,202:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:33:38,805:INFO:Calculating mean and std
2024-04-27 12:33:38,807:INFO:Creating metrics dataframe
2024-04-27 12:33:38,810:INFO:Uploading results into container
2024-04-27 12:33:38,811:INFO:Uploading model into container now
2024-04-27 12:33:38,811:INFO:_master_model_container: 12
2024-04-27 12:33:38,811:INFO:_display_container: 2
2024-04-27 12:33:38,812:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-04-27 12:33:38,812:INFO:create_model() successfully completed......................................
2024-04-27 12:33:39,020:INFO:SubProcess create_model() end ==================================
2024-04-27 12:33:39,021:INFO:Creating metrics dataframe
2024-04-27 12:33:39,034:INFO:Initializing Light Gradient Boosting Machine
2024-04-27 12:33:39,034:INFO:Total runtime is 0.11465298334757489 minutes
2024-04-27 12:33:39,042:INFO:SubProcess create_model() called ==================================
2024-04-27 12:33:39,042:INFO:Initializing create_model()
2024-04-27 12:33:39,042:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020233A255D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:39,042:INFO:Checking exceptions
2024-04-27 12:33:39,042:INFO:Importing libraries
2024-04-27 12:33:39,042:INFO:Copying training dataset
2024-04-27 12:33:39,050:INFO:Defining folds
2024-04-27 12:33:39,051:INFO:Declaring metric variables
2024-04-27 12:33:39,057:INFO:Importing untrained model
2024-04-27 12:33:39,063:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-27 12:33:39,076:INFO:Starting cross validation
2024-04-27 12:33:39,077:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:33:39,741:INFO:Calculating mean and std
2024-04-27 12:33:39,743:INFO:Creating metrics dataframe
2024-04-27 12:33:39,747:INFO:Uploading results into container
2024-04-27 12:33:39,748:INFO:Uploading model into container now
2024-04-27 12:33:39,749:INFO:_master_model_container: 13
2024-04-27 12:33:39,749:INFO:_display_container: 2
2024-04-27 12:33:39,750:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-27 12:33:39,750:INFO:create_model() successfully completed......................................
2024-04-27 12:33:39,959:INFO:SubProcess create_model() end ==================================
2024-04-27 12:33:39,959:INFO:Creating metrics dataframe
2024-04-27 12:33:39,980:INFO:Initializing CatBoost Classifier
2024-04-27 12:33:39,980:INFO:Total runtime is 0.13041835625966391 minutes
2024-04-27 12:33:39,985:INFO:SubProcess create_model() called ==================================
2024-04-27 12:33:39,985:INFO:Initializing create_model()
2024-04-27 12:33:39,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020233A255D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:39,986:INFO:Checking exceptions
2024-04-27 12:33:39,986:INFO:Importing libraries
2024-04-27 12:33:39,986:INFO:Copying training dataset
2024-04-27 12:33:39,997:INFO:Defining folds
2024-04-27 12:33:39,997:INFO:Declaring metric variables
2024-04-27 12:33:40,004:INFO:Importing untrained model
2024-04-27 12:33:40,010:INFO:CatBoost Classifier Imported successfully
2024-04-27 12:33:40,025:INFO:Starting cross validation
2024-04-27 12:33:40,027:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:33:47,777:INFO:Calculating mean and std
2024-04-27 12:33:47,778:INFO:Creating metrics dataframe
2024-04-27 12:33:47,782:INFO:Uploading results into container
2024-04-27 12:33:47,783:INFO:Uploading model into container now
2024-04-27 12:33:47,785:INFO:_master_model_container: 14
2024-04-27 12:33:47,785:INFO:_display_container: 2
2024-04-27 12:33:47,785:INFO:<catboost.core.CatBoostClassifier object at 0x000002023B6D1810>
2024-04-27 12:33:47,785:INFO:create_model() successfully completed......................................
2024-04-27 12:33:48,033:INFO:SubProcess create_model() end ==================================
2024-04-27 12:33:48,033:INFO:Creating metrics dataframe
2024-04-27 12:33:48,049:INFO:Initializing Dummy Classifier
2024-04-27 12:33:48,049:INFO:Total runtime is 0.2649068315823873 minutes
2024-04-27 12:33:48,057:INFO:SubProcess create_model() called ==================================
2024-04-27 12:33:48,058:INFO:Initializing create_model()
2024-04-27 12:33:48,058:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020233A255D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:48,058:INFO:Checking exceptions
2024-04-27 12:33:48,058:INFO:Importing libraries
2024-04-27 12:33:48,059:INFO:Copying training dataset
2024-04-27 12:33:48,068:INFO:Defining folds
2024-04-27 12:33:48,068:INFO:Declaring metric variables
2024-04-27 12:33:48,074:INFO:Importing untrained model
2024-04-27 12:33:48,080:INFO:Dummy Classifier Imported successfully
2024-04-27 12:33:48,089:INFO:Starting cross validation
2024-04-27 12:33:48,092:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:33:48,155:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-27 12:33:48,154:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-27 12:33:48,163:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-27 12:33:48,165:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-27 12:33:48,166:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-27 12:33:48,169:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-27 12:33:48,173:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-27 12:33:48,177:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-27 12:33:48,180:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-27 12:33:48,189:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-27 12:33:48,199:INFO:Calculating mean and std
2024-04-27 12:33:48,200:INFO:Creating metrics dataframe
2024-04-27 12:33:48,203:INFO:Uploading results into container
2024-04-27 12:33:48,204:INFO:Uploading model into container now
2024-04-27 12:33:48,204:INFO:_master_model_container: 15
2024-04-27 12:33:48,205:INFO:_display_container: 2
2024-04-27 12:33:48,205:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-04-27 12:33:48,205:INFO:create_model() successfully completed......................................
2024-04-27 12:33:48,406:INFO:SubProcess create_model() end ==================================
2024-04-27 12:33:48,406:INFO:Creating metrics dataframe
2024-04-27 12:33:48,424:WARNING:c:\Users\USER\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-27 12:33:48,445:INFO:Initializing create_model()
2024-04-27 12:33:48,445:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:48,445:INFO:Checking exceptions
2024-04-27 12:33:48,447:INFO:Importing libraries
2024-04-27 12:33:48,448:INFO:Copying training dataset
2024-04-27 12:33:48,454:INFO:Defining folds
2024-04-27 12:33:48,454:INFO:Declaring metric variables
2024-04-27 12:33:48,454:INFO:Importing untrained model
2024-04-27 12:33:48,454:INFO:Declaring custom model
2024-04-27 12:33:48,456:INFO:Random Forest Classifier Imported successfully
2024-04-27 12:33:48,457:INFO:Cross validation set to False
2024-04-27 12:33:48,458:INFO:Fitting Model
2024-04-27 12:33:48,710:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-04-27 12:33:48,710:INFO:create_model() successfully completed......................................
2024-04-27 12:33:48,955:INFO:_master_model_container: 15
2024-04-27 12:33:48,955:INFO:_display_container: 2
2024-04-27 12:33:48,956:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-04-27 12:33:48,956:INFO:compare_models() successfully completed......................................
2024-04-27 12:33:48,957:INFO:Initializing tune_model()
2024-04-27 12:33:48,957:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-27 12:33:48,957:INFO:Checking exceptions
2024-04-27 12:33:48,981:INFO:Copying training dataset
2024-04-27 12:33:48,988:INFO:Checking base model
2024-04-27 12:33:48,988:INFO:Base model : Random Forest Classifier
2024-04-27 12:33:48,997:INFO:Declaring metric variables
2024-04-27 12:33:49,006:INFO:Defining Hyperparameters
2024-04-27 12:33:49,272:INFO:Tuning with n_jobs=-1
2024-04-27 12:33:49,272:INFO:Initializing RandomizedSearchCV
2024-04-27 12:33:54,644:INFO:best_params: {'actual_estimator__n_estimators': 110, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.2, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 5, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': True}
2024-04-27 12:33:54,645:INFO:Hyperparameter search completed
2024-04-27 12:33:54,645:INFO:SubProcess create_model() called ==================================
2024-04-27 12:33:54,646:INFO:Initializing create_model()
2024-04-27 12:33:54,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002023B0140D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 110, 'min_samples_split': 9, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.2, 'max_features': 'sqrt', 'max_depth': 5, 'criterion': 'entropy', 'class_weight': 'balanced_subsample', 'bootstrap': True})
2024-04-27 12:33:54,646:INFO:Checking exceptions
2024-04-27 12:33:54,646:INFO:Importing libraries
2024-04-27 12:33:54,646:INFO:Copying training dataset
2024-04-27 12:33:54,654:INFO:Defining folds
2024-04-27 12:33:54,654:INFO:Declaring metric variables
2024-04-27 12:33:54,661:INFO:Importing untrained model
2024-04-27 12:33:54,661:INFO:Declaring custom model
2024-04-27 12:33:54,667:INFO:Random Forest Classifier Imported successfully
2024-04-27 12:33:54,678:INFO:Starting cross validation
2024-04-27 12:33:54,679:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:33:55,324:INFO:Calculating mean and std
2024-04-27 12:33:55,325:INFO:Creating metrics dataframe
2024-04-27 12:33:55,332:INFO:Finalizing model
2024-04-27 12:33:55,719:INFO:Uploading results into container
2024-04-27 12:33:55,722:INFO:Uploading model into container now
2024-04-27 12:33:55,723:INFO:_master_model_container: 16
2024-04-27 12:33:55,723:INFO:_display_container: 3
2024-04-27 12:33:55,724:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.2,
                       min_samples_leaf=6, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=110, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-04-27 12:33:55,724:INFO:create_model() successfully completed......................................
2024-04-27 12:33:55,945:INFO:SubProcess create_model() end ==================================
2024-04-27 12:33:55,945:INFO:choose_better activated
2024-04-27 12:33:55,949:INFO:SubProcess create_model() called ==================================
2024-04-27 12:33:55,950:INFO:Initializing create_model()
2024-04-27 12:33:55,950:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:55,950:INFO:Checking exceptions
2024-04-27 12:33:55,952:INFO:Importing libraries
2024-04-27 12:33:55,953:INFO:Copying training dataset
2024-04-27 12:33:55,961:INFO:Defining folds
2024-04-27 12:33:55,961:INFO:Declaring metric variables
2024-04-27 12:33:55,962:INFO:Importing untrained model
2024-04-27 12:33:55,962:INFO:Declaring custom model
2024-04-27 12:33:55,963:INFO:Random Forest Classifier Imported successfully
2024-04-27 12:33:55,963:INFO:Starting cross validation
2024-04-27 12:33:55,964:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-27 12:33:56,577:INFO:Calculating mean and std
2024-04-27 12:33:56,578:INFO:Creating metrics dataframe
2024-04-27 12:33:56,581:INFO:Finalizing model
2024-04-27 12:33:56,836:INFO:Uploading results into container
2024-04-27 12:33:56,837:INFO:Uploading model into container now
2024-04-27 12:33:56,837:INFO:_master_model_container: 17
2024-04-27 12:33:56,837:INFO:_display_container: 4
2024-04-27 12:33:56,839:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-04-27 12:33:56,839:INFO:create_model() successfully completed......................................
2024-04-27 12:33:57,039:INFO:SubProcess create_model() end ==================================
2024-04-27 12:33:57,039:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8181
2024-04-27 12:33:57,040:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.2,
                       min_samples_leaf=6, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=110, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.8138
2024-04-27 12:33:57,041:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-04-27 12:33:57,041:INFO:choose_better completed
2024-04-27 12:33:57,041:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-27 12:33:57,057:INFO:_master_model_container: 17
2024-04-27 12:33:57,057:INFO:_display_container: 3
2024-04-27 12:33:57,059:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-04-27 12:33:57,059:INFO:tune_model() successfully completed......................................
2024-04-27 12:33:57,292:INFO:Initializing evaluate_model()
2024-04-27 12:33:57,292:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-27 12:33:57,307:INFO:Initializing plot_model()
2024-04-27 12:33:57,308:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-04-27 12:33:57,308:INFO:Checking exceptions
2024-04-27 12:33:57,347:INFO:Preloading libraries
2024-04-27 12:33:57,366:INFO:Copying training dataset
2024-04-27 12:33:57,367:INFO:Plot type: pipeline
2024-04-27 12:33:57,497:INFO:Visual Rendered Successfully
2024-04-27 12:33:57,717:INFO:plot_model() successfully completed......................................
2024-04-27 12:33:57,723:INFO:Initializing finalize_model()
2024-04-27 12:33:57,723:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-27 12:33:57,724:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-04-27 12:33:57,728:INFO:Initializing create_model()
2024-04-27 12:33:57,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-27 12:33:57,729:INFO:Checking exceptions
2024-04-27 12:33:57,730:INFO:Importing libraries
2024-04-27 12:33:57,732:INFO:Copying training dataset
2024-04-27 12:33:57,732:INFO:Defining folds
2024-04-27 12:33:57,733:INFO:Declaring metric variables
2024-04-27 12:33:57,733:INFO:Importing untrained model
2024-04-27 12:33:57,733:INFO:Declaring custom model
2024-04-27 12:33:57,735:INFO:Random Forest Classifier Imported successfully
2024-04-27 12:33:57,736:INFO:Cross validation set to False
2024-04-27 12:33:57,736:INFO:Fitting Model
2024-04-27 12:33:58,014:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-04-27 12:33:58,014:INFO:create_model() successfully completed......................................
2024-04-27 12:33:58,249:INFO:_master_model_container: 17
2024-04-27 12:33:58,249:INFO:_display_container: 3
2024-04-27 12:33:58,257:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-04-27 12:33:58,257:INFO:finalize_model() successfully completed......................................
2024-04-27 12:33:58,487:INFO:Initializing save_model()
2024-04-27 12:33:58,487:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=heart_failure_classification_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\USER\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-27 12:33:58,488:INFO:Adding model into prep_pipe
2024-04-27 12:33:58,488:WARNING:Only Model saved as it was a pipeline.
2024-04-27 12:33:58,552:INFO:heart_failure_classification_model.pkl saved in current working directory
2024-04-27 12:33:58,560:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-04-27 12:33:58,560:INFO:save_model() successfully completed......................................
2024-04-27 12:34:08,539:INFO:Initializing plot_model()
2024-04-27 12:34:08,539:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=feature_all, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-04-27 12:34:08,540:INFO:Checking exceptions
2024-04-27 12:34:08,577:INFO:Preloading libraries
2024-04-27 12:34:08,587:INFO:Copying training dataset
2024-04-27 12:34:08,587:INFO:Plot type: feature_all
2024-04-27 12:34:08,614:WARNING:No coef_ found. Trying feature_importances_
2024-04-27 12:34:08,923:INFO:Visual Rendered Successfully
2024-04-27 12:34:09,112:INFO:plot_model() successfully completed......................................
2024-04-27 12:34:12,949:INFO:Initializing plot_model()
2024-04-27 12:34:12,950:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=feature, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-04-27 12:34:12,950:INFO:Checking exceptions
2024-04-27 12:34:12,991:INFO:Preloading libraries
2024-04-27 12:34:13,001:INFO:Copying training dataset
2024-04-27 12:34:13,001:INFO:Plot type: feature
2024-04-27 12:34:13,001:WARNING:No coef_ found. Trying feature_importances_
2024-04-27 12:34:13,282:INFO:Visual Rendered Successfully
2024-04-27 12:34:13,470:INFO:plot_model() successfully completed......................................
2024-04-27 12:34:16,603:INFO:Initializing plot_model()
2024-04-27 12:34:16,604:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=feature_all, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-04-27 12:34:16,604:INFO:Checking exceptions
2024-04-27 12:34:16,645:INFO:Preloading libraries
2024-04-27 12:34:16,656:INFO:Copying training dataset
2024-04-27 12:34:16,656:INFO:Plot type: feature_all
2024-04-27 12:34:16,682:WARNING:No coef_ found. Trying feature_importances_
2024-04-27 12:34:16,991:INFO:Visual Rendered Successfully
2024-04-27 12:34:17,180:INFO:plot_model() successfully completed......................................
2024-04-27 12:34:19,955:INFO:Initializing plot_model()
2024-04-27 12:34:19,955:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=feature, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-04-27 12:34:19,956:INFO:Checking exceptions
2024-04-27 12:34:19,995:INFO:Preloading libraries
2024-04-27 12:34:20,005:INFO:Copying training dataset
2024-04-27 12:34:20,005:INFO:Plot type: feature
2024-04-27 12:34:20,006:WARNING:No coef_ found. Trying feature_importances_
2024-04-27 12:34:20,316:INFO:Visual Rendered Successfully
2024-04-27 12:34:20,516:INFO:plot_model() successfully completed......................................
2024-04-27 12:34:24,175:INFO:Initializing plot_model()
2024-04-27 12:34:24,175:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=feature_all, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-04-27 12:34:24,176:INFO:Checking exceptions
2024-04-27 12:34:24,215:INFO:Preloading libraries
2024-04-27 12:34:24,224:INFO:Copying training dataset
2024-04-27 12:34:24,225:INFO:Plot type: feature_all
2024-04-27 12:34:24,250:WARNING:No coef_ found. Trying feature_importances_
2024-04-27 12:34:24,548:INFO:Visual Rendered Successfully
2024-04-27 12:34:24,737:INFO:plot_model() successfully completed......................................
2024-04-27 12:34:26,665:INFO:Initializing plot_model()
2024-04-27 12:34:26,666:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=feature, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-04-27 12:34:26,667:INFO:Checking exceptions
2024-04-27 12:34:26,703:INFO:Preloading libraries
2024-04-27 12:34:26,714:INFO:Copying training dataset
2024-04-27 12:34:26,714:INFO:Plot type: feature
2024-04-27 12:34:26,714:WARNING:No coef_ found. Trying feature_importances_
2024-04-27 12:34:26,995:INFO:Visual Rendered Successfully
2024-04-27 12:34:27,183:INFO:plot_model() successfully completed......................................
2024-04-27 12:34:29,270:INFO:Initializing plot_model()
2024-04-27 12:34:29,271:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=feature_all, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-04-27 12:34:29,271:INFO:Checking exceptions
2024-04-27 12:34:29,311:INFO:Preloading libraries
2024-04-27 12:34:29,321:INFO:Copying training dataset
2024-04-27 12:34:29,321:INFO:Plot type: feature_all
2024-04-27 12:34:29,345:WARNING:No coef_ found. Trying feature_importances_
2024-04-27 12:34:29,643:INFO:Visual Rendered Successfully
2024-04-27 12:34:29,831:INFO:plot_model() successfully completed......................................
2024-04-27 12:34:31,322:INFO:Initializing plot_model()
2024-04-27 12:34:31,323:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002023909FA10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=feature, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-04-27 12:34:31,323:INFO:Checking exceptions
2024-04-27 12:34:31,415:INFO:Preloading libraries
2024-04-27 12:34:31,430:INFO:Copying training dataset
2024-04-27 12:34:31,430:INFO:Plot type: feature
2024-04-27 12:34:31,431:WARNING:No coef_ found. Trying feature_importances_
2024-04-27 12:34:31,734:INFO:Visual Rendered Successfully
2024-04-27 12:34:31,929:INFO:plot_model() successfully completed......................................
2024-04-27 13:23:17,506:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-27 13:23:17,506:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-27 13:23:17,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-27 13:23:17,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-27 13:23:20,773:INFO:Initializing load_model()
2024-04-27 13:23:20,774:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:23:39,368:INFO:Initializing load_model()
2024-04-27 13:23:39,369:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:23:39,448:INFO:Initializing predict_model()
2024-04-27 13:23:39,448:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC195D2ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC19FCA660>)
2024-04-27 13:23:39,449:INFO:Checking exceptions
2024-04-27 13:23:39,449:INFO:Preloading libraries
2024-04-27 13:23:39,449:INFO:Set up data.
2024-04-27 13:23:39,457:INFO:Set up index.
2024-04-27 13:30:45,981:INFO:Initializing load_model()
2024-04-27 13:30:45,981:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:30:46,073:INFO:Initializing predict_model()
2024-04-27 13:30:46,073:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC61C13A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC1A4ABB00>)
2024-04-27 13:30:46,073:INFO:Checking exceptions
2024-04-27 13:30:46,073:INFO:Preloading libraries
2024-04-27 13:30:46,074:INFO:Set up data.
2024-04-27 13:30:46,081:INFO:Set up index.
2024-04-27 13:30:52,348:INFO:Initializing load_model()
2024-04-27 13:30:52,348:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:30:56,829:INFO:Initializing load_model()
2024-04-27 13:30:56,829:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:30:56,917:INFO:Initializing predict_model()
2024-04-27 13:30:56,918:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC195DDB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC61C0FA60>)
2024-04-27 13:30:56,918:INFO:Checking exceptions
2024-04-27 13:30:56,918:INFO:Preloading libraries
2024-04-27 13:30:56,919:INFO:Set up data.
2024-04-27 13:30:56,923:INFO:Set up index.
2024-04-27 13:41:30,997:INFO:Initializing load_model()
2024-04-27 13:41:30,998:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:41:34,721:INFO:Initializing load_model()
2024-04-27 13:41:34,721:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:41:34,804:INFO:Initializing predict_model()
2024-04-27 13:41:34,805:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC19648910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC61C0F4C0>)
2024-04-27 13:41:34,805:INFO:Checking exceptions
2024-04-27 13:41:34,805:INFO:Preloading libraries
2024-04-27 13:41:34,806:INFO:Set up data.
2024-04-27 13:41:34,811:INFO:Set up index.
2024-04-27 13:46:13,367:INFO:Initializing load_model()
2024-04-27 13:46:13,367:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:46:13,452:INFO:Initializing predict_model()
2024-04-27 13:46:13,453:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC61C2E850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC19FCA840>)
2024-04-27 13:46:13,453:INFO:Checking exceptions
2024-04-27 13:46:13,453:INFO:Preloading libraries
2024-04-27 13:46:13,454:INFO:Set up data.
2024-04-27 13:46:13,460:INFO:Set up index.
2024-04-27 13:46:36,998:INFO:Initializing load_model()
2024-04-27 13:46:36,998:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:46:37,221:INFO:Initializing load_model()
2024-04-27 13:46:37,221:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:46:37,431:INFO:Initializing load_model()
2024-04-27 13:46:37,431:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:46:37,670:INFO:Initializing load_model()
2024-04-27 13:46:37,671:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:46:39,244:INFO:Initializing load_model()
2024-04-27 13:46:39,244:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:46:39,447:INFO:Initializing load_model()
2024-04-27 13:46:39,447:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:46:39,659:INFO:Initializing load_model()
2024-04-27 13:46:39,659:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:46:39,869:INFO:Initializing load_model()
2024-04-27 13:46:39,869:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:46:39,952:INFO:Initializing load_model()
2024-04-27 13:46:39,952:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:46:40,124:INFO:Initializing load_model()
2024-04-27 13:46:40,125:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:46:44,602:INFO:Initializing load_model()
2024-04-27 13:46:44,602:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:46:44,825:INFO:Initializing load_model()
2024-04-27 13:46:44,825:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:46:44,892:INFO:Initializing predict_model()
2024-04-27 13:46:44,892:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC1A6B5D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC1A4ABA60>)
2024-04-27 13:46:44,892:INFO:Checking exceptions
2024-04-27 13:46:44,893:INFO:Preloading libraries
2024-04-27 13:46:44,893:INFO:Set up data.
2024-04-27 13:46:44,897:INFO:Set up index.
2024-04-27 13:46:50,493:INFO:Initializing load_model()
2024-04-27 13:46:50,494:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:46:50,729:INFO:Initializing load_model()
2024-04-27 13:46:50,730:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 13:46:50,799:INFO:Initializing predict_model()
2024-04-27 13:46:50,799:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC1A21F5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC61C0EAC0>)
2024-04-27 13:46:50,799:INFO:Checking exceptions
2024-04-27 13:46:50,799:INFO:Preloading libraries
2024-04-27 13:46:50,800:INFO:Set up data.
2024-04-27 13:46:50,805:INFO:Set up index.
2024-04-27 14:03:04,137:INFO:Initializing load_model()
2024-04-27 14:03:04,139:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:03:04,210:INFO:Initializing predict_model()
2024-04-27 14:03:04,211:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC61B66050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC19FCA2A0>)
2024-04-27 14:03:04,211:INFO:Checking exceptions
2024-04-27 14:03:04,211:INFO:Preloading libraries
2024-04-27 14:03:04,211:INFO:Set up data.
2024-04-27 14:03:04,219:INFO:Set up index.
2024-04-27 14:03:09,963:INFO:Initializing load_model()
2024-04-27 14:03:09,964:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:03:17,328:INFO:Initializing load_model()
2024-04-27 14:03:17,328:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:03:17,407:INFO:Initializing predict_model()
2024-04-27 14:03:17,407:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC1A6D3A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC61C0EFC0>)
2024-04-27 14:03:17,408:INFO:Checking exceptions
2024-04-27 14:03:17,408:INFO:Preloading libraries
2024-04-27 14:03:17,408:INFO:Set up data.
2024-04-27 14:03:17,413:INFO:Set up index.
2024-04-27 14:03:34,149:INFO:Initializing load_model()
2024-04-27 14:03:34,149:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:03:37,116:INFO:Initializing load_model()
2024-04-27 14:03:37,116:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:03:37,197:INFO:Initializing predict_model()
2024-04-27 14:03:37,198:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC196560D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC1A4AB740>)
2024-04-27 14:03:37,198:INFO:Checking exceptions
2024-04-27 14:03:37,198:INFO:Preloading libraries
2024-04-27 14:03:37,198:INFO:Set up data.
2024-04-27 14:03:37,203:INFO:Set up index.
2024-04-27 14:03:42,202:INFO:Initializing load_model()
2024-04-27 14:03:42,203:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:03:42,428:INFO:Initializing load_model()
2024-04-27 14:03:42,428:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:03:42,520:INFO:Initializing predict_model()
2024-04-27 14:03:42,520:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC618C2650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC61C0EFC0>)
2024-04-27 14:03:42,521:INFO:Checking exceptions
2024-04-27 14:03:42,521:INFO:Preloading libraries
2024-04-27 14:03:42,521:INFO:Set up data.
2024-04-27 14:03:42,526:INFO:Set up index.
2024-04-27 14:04:21,810:INFO:Initializing load_model()
2024-04-27 14:04:21,810:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:04:22,053:INFO:Initializing load_model()
2024-04-27 14:04:22,054:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:04:22,127:INFO:Initializing predict_model()
2024-04-27 14:04:22,127:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC619F59D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC1A4ABC40>)
2024-04-27 14:04:22,128:INFO:Checking exceptions
2024-04-27 14:04:22,128:INFO:Preloading libraries
2024-04-27 14:04:22,128:INFO:Set up data.
2024-04-27 14:04:22,134:INFO:Set up index.
2024-04-27 14:04:28,914:INFO:Initializing load_model()
2024-04-27 14:04:28,915:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:04:29,133:INFO:Initializing load_model()
2024-04-27 14:04:29,135:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:04:29,225:INFO:Initializing predict_model()
2024-04-27 14:04:29,225:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC1A6B79D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC1A4ABA60>)
2024-04-27 14:04:29,225:INFO:Checking exceptions
2024-04-27 14:04:29,225:INFO:Preloading libraries
2024-04-27 14:04:29,225:INFO:Set up data.
2024-04-27 14:04:29,230:INFO:Set up index.
2024-04-27 14:04:36,145:INFO:Initializing load_model()
2024-04-27 14:04:36,145:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:04:36,362:INFO:Initializing load_model()
2024-04-27 14:04:36,362:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:04:36,433:INFO:Initializing predict_model()
2024-04-27 14:04:36,433:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC61C38BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC61C0E980>)
2024-04-27 14:04:36,433:INFO:Checking exceptions
2024-04-27 14:04:36,433:INFO:Preloading libraries
2024-04-27 14:04:36,434:INFO:Set up data.
2024-04-27 14:04:36,441:INFO:Set up index.
2024-04-27 14:04:43,004:INFO:Initializing load_model()
2024-04-27 14:04:43,004:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:04:43,233:INFO:Initializing load_model()
2024-04-27 14:04:43,234:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:04:43,300:INFO:Initializing predict_model()
2024-04-27 14:04:43,300:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC61B65A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC1A4ABA60>)
2024-04-27 14:04:43,300:INFO:Checking exceptions
2024-04-27 14:04:43,300:INFO:Preloading libraries
2024-04-27 14:04:43,301:INFO:Set up data.
2024-04-27 14:04:43,307:INFO:Set up index.
2024-04-27 14:04:48,491:INFO:Initializing load_model()
2024-04-27 14:04:48,491:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:04:48,719:INFO:Initializing load_model()
2024-04-27 14:04:48,720:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:04:48,786:INFO:Initializing predict_model()
2024-04-27 14:04:48,786:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC1963AA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC61C0F560>)
2024-04-27 14:04:48,787:INFO:Checking exceptions
2024-04-27 14:04:48,787:INFO:Preloading libraries
2024-04-27 14:04:48,787:INFO:Set up data.
2024-04-27 14:04:48,793:INFO:Set up index.
2024-04-27 14:04:53,906:INFO:Initializing load_model()
2024-04-27 14:04:53,906:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:04:54,127:INFO:Initializing load_model()
2024-04-27 14:04:54,128:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:04:54,213:INFO:Initializing predict_model()
2024-04-27 14:04:54,213:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC195C3B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC19F49BC0>)
2024-04-27 14:04:54,214:INFO:Checking exceptions
2024-04-27 14:04:54,214:INFO:Preloading libraries
2024-04-27 14:04:54,214:INFO:Set up data.
2024-04-27 14:04:54,220:INFO:Set up index.
2024-04-27 14:04:58,939:INFO:Initializing load_model()
2024-04-27 14:04:58,940:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:04:59,157:INFO:Initializing load_model()
2024-04-27 14:04:59,157:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:04:59,219:INFO:Initializing predict_model()
2024-04-27 14:04:59,219:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC1A21D550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC1A4ABA60>)
2024-04-27 14:04:59,219:INFO:Checking exceptions
2024-04-27 14:04:59,219:INFO:Preloading libraries
2024-04-27 14:04:59,220:INFO:Set up data.
2024-04-27 14:04:59,224:INFO:Set up index.
2024-04-27 14:05:03,292:INFO:Initializing load_model()
2024-04-27 14:05:03,292:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:05:03,507:INFO:Initializing load_model()
2024-04-27 14:05:03,507:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:05:03,577:INFO:Initializing predict_model()
2024-04-27 14:05:03,577:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC61C12090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC61C0F7E0>)
2024-04-27 14:05:03,577:INFO:Checking exceptions
2024-04-27 14:05:03,577:INFO:Preloading libraries
2024-04-27 14:05:03,578:INFO:Set up data.
2024-04-27 14:05:03,584:INFO:Set up index.
2024-04-27 14:05:07,419:INFO:Initializing load_model()
2024-04-27 14:05:07,420:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:05:07,654:INFO:Initializing load_model()
2024-04-27 14:05:07,655:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:05:07,724:INFO:Initializing predict_model()
2024-04-27 14:05:07,724:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC1A6FA6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC61C0FB00>)
2024-04-27 14:05:07,724:INFO:Checking exceptions
2024-04-27 14:05:07,724:INFO:Preloading libraries
2024-04-27 14:05:07,725:INFO:Set up data.
2024-04-27 14:05:07,729:INFO:Set up index.
2024-04-27 14:05:10,995:INFO:Initializing load_model()
2024-04-27 14:05:10,995:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:05:11,213:INFO:Initializing load_model()
2024-04-27 14:05:11,213:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:05:11,296:INFO:Initializing predict_model()
2024-04-27 14:05:11,297:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC19655090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC61C0F9C0>)
2024-04-27 14:05:11,297:INFO:Checking exceptions
2024-04-27 14:05:11,297:INFO:Preloading libraries
2024-04-27 14:05:11,298:INFO:Set up data.
2024-04-27 14:05:11,302:INFO:Set up index.
2024-04-27 14:05:15,552:INFO:Initializing load_model()
2024-04-27 14:05:15,553:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:05:15,774:INFO:Initializing load_model()
2024-04-27 14:05:15,774:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:05:15,837:INFO:Initializing predict_model()
2024-04-27 14:05:15,837:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC619F7A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC61C0EA20>)
2024-04-27 14:05:15,838:INFO:Checking exceptions
2024-04-27 14:05:15,838:INFO:Preloading libraries
2024-04-27 14:05:15,838:INFO:Set up data.
2024-04-27 14:05:15,843:INFO:Set up index.
2024-04-27 14:05:20,592:INFO:Initializing load_model()
2024-04-27 14:05:20,593:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:05:20,809:INFO:Initializing load_model()
2024-04-27 14:05:20,809:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:05:20,873:INFO:Initializing predict_model()
2024-04-27 14:05:20,873:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC1A6B7DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC61C0D580>)
2024-04-27 14:05:20,874:INFO:Checking exceptions
2024-04-27 14:05:20,874:INFO:Preloading libraries
2024-04-27 14:05:20,874:INFO:Set up data.
2024-04-27 14:05:20,878:INFO:Set up index.
2024-04-27 14:07:01,107:INFO:Initializing load_model()
2024-04-27 14:07:01,108:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:07:01,323:INFO:Initializing load_model()
2024-04-27 14:07:01,324:INFO:load_model(model_name=C:/Users/USER/Semester 4_MLOps/heart_failure/heart_failure_classification_model, platform=None, authentication=None, verbose=True)
2024-04-27 14:07:01,390:INFO:Initializing predict_model()
2024-04-27 14:07:01,391:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FC18220710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FC61C0EFC0>)
2024-04-27 14:07:01,391:INFO:Checking exceptions
2024-04-27 14:07:01,391:INFO:Preloading libraries
2024-04-27 14:07:01,391:INFO:Set up data.
2024-04-27 14:07:01,397:INFO:Set up index.
